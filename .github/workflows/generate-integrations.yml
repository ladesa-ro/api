name: Generate Integrations

on:
  push:
    branches:
      - development

concurrency: ${{ github.workflow }}-${{ github.ref }}

env:
  node-version: 22
  automated-branch: ldsa-automated/generated-integrations
  development-branch: development

jobs:
  generate-integrations:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pull-requests: write
      repository-projects: write

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Print Tag
        shell: bash
        run: echo ${{ github.ref_name }}

      - name: Install
        uses: ./.github/actions/prepare/install
        with:
          install-node: "true"

      - id: build-integrations
        name: Build integrations
        run: |
          pnpm run --filter "@ladesa-ro/api.internal.integrations" build

          if [ "$(git diff --exit-code > /dev/null; echo $?)" -eq "1" ]; then
            echo "has_changes=true" >> "$GITHUB_OUTPUT";
          else
            echo "has_changes=false" >> "$GITHUB_OUTPUT";
          fi

      - name: Retrieve GitHub App credentials
        uses: actions/create-github-app-token@v1
        id: app-token
        if: steps.build-integrations.outputs.has_changes == 'true'
        with:
          app-id: ${{ secrets.LADESA_BOT_ID }}
          private-key: ${{ secrets.LADESA_BOT_SECRET }}

      - name: Get GitHub App User ID
        id: get-user-id
        if: steps.build-integrations.outputs.has_changes == 'true'
        run: |
          echo "user-id=$(gh api "/users/${{ steps.app-token.outputs.app-slug }}[bot]" --jq .id)" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}

      - name: Setup git with GitHub App name and email
        run: |
          git config --global user.name '${{ steps.app-token.outputs.app-slug }}[bot]'
          git config --global user.email '${{ steps.get-user-id.outputs.user-id }}+${{ steps.app-token.outputs.app-slug }}[bot]@users.noreply.github.com>'

      - name: Checkout to branch and commit changes
        run: |
          git branch -D ${{ env.automated-branch }};
          git checkout -b ${{ env.automated-branch }};
          git add -A;
          git commit -m "chore: generate integrations";

      - name: Force push into branch
        run: |
          git push -f origin ${{ env.automated-branch }};

      - name: Create pull request
        if: steps.build-integrations.outputs.has_changes == 'true'
        run: |
          gh pr create \
            -B ${{ env.development-branch }} \
            -H ${{ env.automated-branch }} \
            --title 'Merge ${{ env.automated-branch }} into ${{ env.development-branch }}' \
            --body 'Created by Github action'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
