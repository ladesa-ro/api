{
  "openapi": "3.0.0",
  "paths": {
    "/": {
      "get": {
        "operationId": "AppController_getHello",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Olá, Mundo!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "service": {
                      "type": "string",
                      "enum": [
                        "@ladesa-ro/api"
                      ],
                      "description": "O nome desta aplicação."
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "up"
                      ],
                      "description": "Status desta aplicação."
                    },
                    "prefix": {
                      "description": "Prefixo do serviço API.",
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "version": {
                      "description": "Versão do serviço API.",
                      "oneOf": [
                        {
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "required": [
                    "service",
                    "status",
                    "version"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Base"
        ]
      }
    },
    "/arquivos/{id}": {
      "get": {
        "operationId": "arquivoGetFile",
        "summary": "",
        "description": "Obtêm o conteúdo.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "acesso.recurso.id",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "acesso.recurso.nome",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nomeRecurso",
            "required": true,
            "in": "query",
            "description": "Acesso via recurso: nome",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "idRecurso",
            "required": true,
            "in": "query",
            "description": "Acesso via recurso: id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Binário.",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "nullable": false
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Arquivos"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/autenticacao/quem-sou-eu": {
      "get": {
        "operationId": "authWhoAmI",
        "summary": "",
        "description": "Obtêm informações sobre o estado de autenticação do ator.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Resposta da operação \"AuthWhoAmI\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthWhoAmIResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Autenticacao"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/autenticacao/login": {
      "post": {
        "operationId": "authLogin",
        "summary": "",
        "description": "Obtêm as credenciais de sessão por meio do envio das credenciais do usuário.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthLoginInputDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Resposta da operação \"AuthLogin\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthSessionCredentialsDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Autenticacao"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/autenticacao/login/refresh": {
      "post": {
        "operationId": "authRefresh",
        "summary": "",
        "description": "Obtêm as credenciais de sessão por meio do envio do token de refresh.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthRefreshInputDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Resposta da operação \"AuthRefresh\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthSessionCredentialsDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Autenticacao"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/autenticacao/definir-senha": {
      "post": {
        "operationId": "authSetInitialPassword",
        "summary": "",
        "description": "Define a senha inicial do usuário",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthSetInitialPasswordInputDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Resposta da operação \"AuthSetInitialPassword\".",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Autenticacao"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/usuarios": {
      "get": {
        "operationId": "usuarioList",
        "summary": "",
        "description": "Operação 'UsuarioList'.",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Página da listagem.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limite de resultados por página.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Busca textual.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Configurações de ordenamento.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resposta da operação \"UsuarioList\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsuarioFindAllResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Usuarios"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "usuarioCreate",
        "summary": "",
        "description": "Operação 'UsuarioCreate'.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UsuarioInputCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Resposta da operação \"UsuarioCreate\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsuarioFindOneResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Usuarios"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/usuarios/{id}": {
      "get": {
        "operationId": "usuarioFindById",
        "summary": "",
        "description": "Operação 'UsuarioFindById'.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do Registro.",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resposta da operação \"UsuarioFindById\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsuarioFindOneResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Usuarios"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "operationId": "usuarioUpdateById",
        "summary": "",
        "description": "Update operation",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do Registro.",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UsuarioInputUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Resposta da operação \"UsuarioUpdateById\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsuarioFindOneResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Usuarios"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "usuarioDeleteById",
        "summary": "",
        "description": "Operação 'UsuarioDeleteById'.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do Registro.",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resposta da operação \"UsuarioDeleteById\".",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Usuarios"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/usuarios/{id}/imagem/capa": {
      "get": {
        "operationId": "usuarioGetCoverImage",
        "summary": "",
        "description": "Obtêm a imagem de capa.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do Registro.",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Binário.",
            "content": {
              "image/jpeg": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "nullable": false
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Usuarios"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "operationId": "usuarioSetCoverImage",
        "summary": "",
        "description": "Define a imagem de capa.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do Registro.",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "file"
                ],
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "nullable": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Resposta da operação \"UsuarioSetCoverImage\".",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Usuarios"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/usuarios/{id}/imagem/perfil": {
      "get": {
        "operationId": "usuarioGetProfileImage",
        "summary": "",
        "description": "Obtêm a imagem de perfil.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do Registro.",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Binário.",
            "content": {
              "image/jpeg": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "nullable": false
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Usuarios"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "operationId": "usuarioSetProfileImage",
        "summary": "",
        "description": "Define a imagem de perfil.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do Registro.",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "file"
                ],
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "nullable": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Resposta da operação \"UsuarioSetProfileImage\".",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Usuarios"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/vinculos": {
      "get": {
        "operationId": "vinculoList",
        "summary": "",
        "description": "Operação 'VinculoList'.",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Página da listagem.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limite de resultados por página.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Busca textual.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Configurações de ordenamento.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "filter.ativo",
            "required": false,
            "in": "query",
            "description": "Filtros para 'ativo'.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "filter.campus.id",
            "required": false,
            "in": "query",
            "description": "Filtros para 'campus.id'.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "filter.usuario.id",
            "required": false,
            "in": "query",
            "description": "Filtros para 'usuario.id'.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resposta da operação \"VinculoList\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VinculoFindAllResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Vinculos"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "vinculoUpdate",
        "summary": "",
        "description": "Dados de entrada para a alteração de vínculo de um Usuário a um Campus.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VinculoUpdateInputDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Resposta da operação \"VinculoUpdate\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VinculoFindAllResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Vinculos"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/campi": {
      "get": {
        "operationId": "campusList",
        "summary": "",
        "description": "Operação 'CampusList'.",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Página da listagem.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limite de resultados por página.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Busca textual.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Configurações de ordenamento.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "filter.endereco.cidade.id",
            "required": false,
            "in": "query",
            "description": "Filtros para 'endereco.cidade.id'.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "filter.endereco.cidade.estado.id",
            "required": false,
            "in": "query",
            "description": "Filtros para 'endereco.cidade.estado.id'.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resposta da operação \"CampusList\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampusFindAllResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Campi"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "campusCreate",
        "summary": "",
        "description": "Operação 'CampusCreate'.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampusInputCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Resposta da operação \"CampusCreate\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampusFindOneResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Campi"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/campi/{id}": {
      "get": {
        "operationId": "campusFindById",
        "summary": "",
        "description": "Operação 'CampusFindById'.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do Registro.",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resposta da operação \"CampusFindById\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampusFindOneResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Campi"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "operationId": "campusUpdateById",
        "summary": "",
        "description": "Update operation",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do Registro.",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampusInputUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Resposta da operação \"CampusUpdateById\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampusFindOneResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Campi"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "campusDeleteById",
        "summary": "",
        "description": "Operação 'CampusDeleteById'.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do Registro.",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resposta da operação \"CampusDeleteById\".",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Campi"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/modalidades": {
      "get": {
        "operationId": "modalidadeList",
        "summary": "",
        "description": "Operação 'ModalidadeList'.",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Página da listagem.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limite de resultados por página.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Busca textual.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Configurações de ordenamento.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resposta da operação \"ModalidadeList\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModalidadeFindAllResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Modalidades"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "modalidadeCreate",
        "summary": "",
        "description": "Operação 'ModalidadeCreate'.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModalidadeInputCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Resposta da operação \"ModalidadeCreate\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModalidadeFindOneResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Modalidades"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/modalidades/{id}": {
      "get": {
        "operationId": "modalidadeFindById",
        "summary": "",
        "description": "Operação 'ModalidadeFindById'.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do Registro.",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resposta da operação \"ModalidadeFindById\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModalidadeFindOneResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Modalidades"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "operationId": "modalidadeUpdateById",
        "summary": "",
        "description": "Update operation",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do Registro.",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModalidadeInputUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Resposta da operação \"ModalidadeUpdateById\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModalidadeFindOneResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Modalidades"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "modalidadeDeleteById",
        "summary": "",
        "description": "Operação 'ModalidadeDeleteById'.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do Registro.",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resposta da operação \"ModalidadeDeleteById\".",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Modalidades"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/base/estados": {
      "get": {
        "operationId": "estadoList",
        "summary": "",
        "description": "Operação 'EstadoList'.",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Página da listagem.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limite de resultados por página.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Busca textual.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Configurações de ordenamento.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resposta da operação \"EstadoList\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EstadoFindAllResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Estados"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/base/estados/{id}": {
      "get": {
        "operationId": "estadoFindById",
        "summary": "",
        "description": "Operação 'EstadoFindById'.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do Registro.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resposta da operação \"EstadoFindById\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EstadoFindOneResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Estados"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/base/cidades": {
      "get": {
        "operationId": "cidadeList",
        "summary": "",
        "description": "Operação 'CidadeList'.",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Página da listagem.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limite de resultados por página.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Busca textual.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Configurações de ordenamento.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "filter.estado.id",
            "required": false,
            "in": "query",
            "description": "Filtros para 'estado.id'.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resposta da operação \"CidadeList\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CidadeFindAllResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Cidades"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/base/cidades/{id}": {
      "get": {
        "operationId": "cidadeFindById",
        "summary": "",
        "description": "Operação 'CidadeFindById'.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do Registro.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resposta da operação \"CidadeFindById\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CidadeFindOneResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Cidades"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/blocos": {
      "get": {
        "operationId": "blocoList",
        "summary": "",
        "description": "Operação 'BlocoList'.",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Página da listagem.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limite de resultados por página.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Busca textual.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Configurações de ordenamento.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "filter.campus.id",
            "required": false,
            "in": "query",
            "description": "Filtros para 'campus.id'.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resposta da operação \"BlocoList\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlocoFindAllResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Blocos"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "blocoCreate",
        "summary": "",
        "description": "Operação 'BlocoCreate'.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BlocoInputCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Resposta da operação \"BlocoCreate\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlocoFindOneResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Blocos"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/blocos/{id}": {
      "get": {
        "operationId": "blocoFindById",
        "summary": "",
        "description": "Operação 'BlocoFindById'.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do Registro.",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resposta da operação \"BlocoFindById\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlocoFindOneResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Blocos"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "operationId": "blocoUpdateById",
        "summary": "",
        "description": "Update operation",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do Registro.",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BlocoInputUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Resposta da operação \"BlocoUpdateById\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlocoFindOneResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Blocos"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "blocoDeleteById",
        "summary": "",
        "description": "Operação 'BlocoDeleteById'.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do Registro.",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resposta da operação \"BlocoDeleteById\".",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Blocos"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/blocos/{id}/imagem/capa": {
      "get": {
        "operationId": "blocoGetCoverImage",
        "summary": "",
        "description": "Obtêm a imagem de capa.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do Registro.",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Binário.",
            "content": {
              "image/jpeg": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "nullable": false
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Blocos"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "operationId": "blocoSetCoverImage",
        "summary": "",
        "description": "Define a imagem de capa.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do Registro.",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "file"
                ],
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "nullable": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Resposta da operação \"BlocoSetCoverImage\".",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Blocos"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/ambientes": {
      "get": {
        "operationId": "ambienteList",
        "summary": "",
        "description": "Operação 'AmbienteList'.",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Página da listagem.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limite de resultados por página.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Busca textual.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Configurações de ordenamento.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "filter.bloco.id",
            "required": false,
            "in": "query",
            "description": "Filtros para 'bloco.id'.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "filter.bloco.campus.id",
            "required": false,
            "in": "query",
            "description": "Filtros para 'bloco.campus.id'.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resposta da operação \"AmbienteList\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AmbienteFindAllResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Ambientes"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "ambienteCreate",
        "summary": "",
        "description": "Operação 'AmbienteCreate'.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AmbienteInputCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Resposta da operação \"AmbienteCreate\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AmbienteFindOneResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Ambientes"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/ambientes/{id}": {
      "get": {
        "operationId": "ambienteFindById",
        "summary": "",
        "description": "Operação 'AmbienteFindById'.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do Registro.",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resposta da operação \"AmbienteFindById\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AmbienteFindOneResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Ambientes"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "operationId": "ambienteUpdateById",
        "summary": "",
        "description": "Update operation",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do Registro.",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AmbienteInputUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Resposta da operação \"AmbienteUpdateById\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AmbienteFindOneResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Ambientes"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "ambienteDeleteById",
        "summary": "",
        "description": "Operação 'AmbienteDeleteById'.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do Registro.",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resposta da operação \"AmbienteDeleteById\".",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Ambientes"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/ambientes/{id}/imagem/capa": {
      "get": {
        "operationId": "ambienteGetCoverImage",
        "summary": "",
        "description": "Obtêm a imagem de capa.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do Registro.",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Binário.",
            "content": {
              "image/jpeg": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "nullable": false
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Ambientes"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "operationId": "ambienteSetCoverImage",
        "summary": "",
        "description": "Define a imagem de capa.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do Registro.",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "file"
                ],
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "nullable": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Resposta da operação \"AmbienteSetCoverImage\".",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Ambientes"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/reservas": {
      "get": {
        "operationId": "reservaList",
        "summary": "",
        "description": "Operação 'ReservaList'.",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Página da listagem.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limite de resultados por página.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Busca textual.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Configurações de ordenamento.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resposta da operação \"ReservaList\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReservaFindAllResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Reservas"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "reservaCreate",
        "summary": "",
        "description": "Operação 'ReservaCreate'.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReservaInputCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Resposta da operação \"ReservaCreate\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReservaFindOneResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Reservas"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/reservas/{id}": {
      "get": {
        "operationId": "reservaFindById",
        "summary": "",
        "description": "Operação 'ReservaFindById'.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do Registro.",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resposta da operação \"ReservaFindById\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReservaFindOneResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Reservas"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "operationId": "reservaUpdateById",
        "summary": "",
        "description": "Update operation",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do Registro.",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReservaInputUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Resposta da operação \"ReservaUpdateById\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReservaFindOneResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Reservas"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "reservaDeleteById",
        "summary": "",
        "description": "Operação 'ReservaDeleteById'.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do Registro.",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resposta da operação \"ReservaDeleteById\".",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Reservas"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/cursos": {
      "get": {
        "operationId": "cursoList",
        "summary": "",
        "description": "Operação 'CursoList'.",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Página da listagem.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limite de resultados por página.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Busca textual.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Configurações de ordenamento.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "filter.campus.id",
            "required": false,
            "in": "query",
            "description": "Filtros para 'campus.id'.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "filter.modalidade.id",
            "required": false,
            "in": "query",
            "description": "Filtros para 'modalidade.id'.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resposta da operação \"CursoList\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CursoFindAllResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Cursos"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "cursoCreate",
        "summary": "",
        "description": "Operação 'CursoCreate'.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CursoInputCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Resposta da operação \"CursoCreate\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CursoFindOneResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Cursos"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/cursos/{id}": {
      "get": {
        "operationId": "cursoFindById",
        "summary": "",
        "description": "Operação 'CursoFindById'.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do Registro.",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resposta da operação \"CursoFindById\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CursoFindOneResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Cursos"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "operationId": "cursoUpdateById",
        "summary": "",
        "description": "Update operation",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do Registro.",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CursoInputUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Resposta da operação \"CursoUpdateById\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CursoFindOneResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Cursos"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "cursoDeleteById",
        "summary": "",
        "description": "Operação 'CursoDeleteById'.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do Registro.",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resposta da operação \"CursoDeleteById\".",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Cursos"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/cursos/{id}/imagem/capa": {
      "get": {
        "operationId": "cursoGetCoverImage",
        "summary": "",
        "description": "Obtêm a imagem de capa.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do Registro.",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Binário.",
            "content": {
              "image/jpeg": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "nullable": false
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Cursos"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "operationId": "cursoSetCoverImage",
        "summary": "",
        "description": "Define a imagem de capa.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do Registro.",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "file"
                ],
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "nullable": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Resposta da operação \"CursoSetCoverImage\".",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Cursos"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/disciplinas": {
      "get": {
        "operationId": "disciplinaList",
        "summary": "",
        "description": "Operação 'DisciplinaList'.",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Página da listagem.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limite de resultados por página.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Busca textual.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Configurações de ordenamento.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resposta da operação \"DisciplinaList\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DisciplinaFindAllResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Disciplinas"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "disciplinaCreate",
        "summary": "",
        "description": "Operação 'DisciplinaCreate'.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DisciplinaInputCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Resposta da operação \"DisciplinaCreate\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DisciplinaFindOneResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Disciplinas"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/disciplinas/{id}": {
      "get": {
        "operationId": "disciplinaFindById",
        "summary": "",
        "description": "Operação 'DisciplinaFindById'.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do Registro.",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resposta da operação \"DisciplinaFindById\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DisciplinaFindOneResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Disciplinas"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "operationId": "disciplinaUpdateById",
        "summary": "",
        "description": "Update operation",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do Registro.",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DisciplinaInputUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Resposta da operação \"DisciplinaUpdateById\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DisciplinaFindOneResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Disciplinas"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "disciplinaDeleteById",
        "summary": "",
        "description": "Operação 'DisciplinaDeleteById'.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do Registro.",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resposta da operação \"DisciplinaDeleteById\".",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Disciplinas"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/disciplinas/{id}/imagem/capa": {
      "get": {
        "operationId": "disciplinaGetCoverImage",
        "summary": "",
        "description": "Obtêm a imagem de capa.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do Registro.",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Binário.",
            "content": {
              "image/jpeg": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "nullable": false
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Disciplinas"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "operationId": "disciplinaSetCoverImage",
        "summary": "",
        "description": "Define a imagem de capa.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do Registro.",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "file"
                ],
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "nullable": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Resposta da operação \"DisciplinaSetCoverImage\".",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Disciplinas"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/turmas": {
      "get": {
        "operationId": "turmaList",
        "summary": "",
        "description": "Operação 'TurmaList'.",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Página da listagem.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limite de resultados por página.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Busca textual.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Configurações de ordenamento.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "filter.ambientePadraoAula.nome",
            "required": false,
            "in": "query",
            "description": "Filtros para 'ambientePadraoAula.nome'.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "filter.ambientePadraoAula.codigo",
            "required": false,
            "in": "query",
            "description": "Filtros para 'ambientePadraoAula.codigo'.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "filter.ambientePadraoAula.capacidade",
            "required": false,
            "in": "query",
            "description": "Filtros para 'ambientePadraoAula.capacidade'.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "filter.ambientePadraoAula.tipo",
            "required": false,
            "in": "query",
            "description": "Filtros para 'ambientePadraoAula.tipo'.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "filter.curso.nome",
            "required": false,
            "in": "query",
            "description": "Filtros para 'curso.nome'.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "filter.curso.nomeAbreviado",
            "required": false,
            "in": "query",
            "description": "Filtros para 'curso.nomeAbreviado'.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "filter.curso.campus.id",
            "required": false,
            "in": "query",
            "description": "Filtros para 'curso.campus.id'.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "filter.curso.modalidade.id",
            "required": false,
            "in": "query",
            "description": "Filtros para 'curso.modalidade.id'.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resposta da operação \"TurmaList\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TurmaFindAllResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Turmas"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "turmaCreate",
        "summary": "",
        "description": "Operação 'TurmaCreate'.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TurmaInputCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Resposta da operação \"TurmaCreate\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TurmaFindOneResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Turmas"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/turmas/{id}": {
      "get": {
        "operationId": "turmaFindById",
        "summary": "",
        "description": "Operação 'TurmaFindById'.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do Registro.",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resposta da operação \"TurmaFindById\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TurmaFindOneResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Turmas"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "operationId": "turmaUpdateById",
        "summary": "",
        "description": "Update operation",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do Registro.",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TurmaInputUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Resposta da operação \"TurmaUpdateById\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TurmaFindOneResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Turmas"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "turmaDeleteById",
        "summary": "",
        "description": "Operação 'TurmaDeleteById'.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do Registro.",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resposta da operação \"TurmaDeleteById\".",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Turmas"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/turmas/{id}/imagem/capa": {
      "get": {
        "operationId": "turmaGetCoverImage",
        "summary": "",
        "description": "Obtêm a imagem de capa.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do Registro.",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Binário.",
            "content": {
              "image/jpeg": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "nullable": false
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Turmas"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "operationId": "turmaSetCoverImage",
        "summary": "",
        "description": "Define a imagem de capa.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do Registro.",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "file"
                ],
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "nullable": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Resposta da operação \"TurmaSetCoverImage\".",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Turmas"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/calendarios-letivos": {
      "get": {
        "operationId": "calendarioLetivoList",
        "summary": "",
        "description": "Operação 'CalendarioLetivoList'.",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Página da listagem.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limite de resultados por página.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Busca textual.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Configurações de ordenamento.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "filter.campus.id",
            "required": false,
            "in": "query",
            "description": "Filtros para 'campus.id'.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "filter.modalidade.id",
            "required": false,
            "in": "query",
            "description": "Filtros para 'modalidade.id'.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resposta da operação \"CalendarioLetivoList\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalendarioLetivoFindAllResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Calendarios Letivos"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "calendarioLetivoCreate",
        "summary": "",
        "description": "Operação 'CalendarioLetivoCreate'.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CalendarioLetivoInputCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Resposta da operação \"CalendarioLetivoCreate\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalendarioLetivoFindOneResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Calendarios Letivos"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/calendarios-letivos/{id}": {
      "get": {
        "operationId": "calendarioLetivoFindById",
        "summary": "",
        "description": "Operação 'CalendarioLetivoFindById'.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do Registro.",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resposta da operação \"CalendarioLetivoFindById\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalendarioLetivoFindOneResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Calendarios Letivos"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "operationId": "calendarioLetivoUpdateById",
        "summary": "",
        "description": "Update operation",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do Registro.",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CalendarioLetivoInputUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Resposta da operação \"CalendarioLetivoUpdateById\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalendarioLetivoFindOneResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Calendarios Letivos"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "calendarioLetivoDeleteById",
        "summary": "",
        "description": "Operação 'CalendarioLetivoDeleteById'.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do Registro.",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resposta da operação \"CalendarioLetivoDeleteById\".",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Calendarios Letivos"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/eventos": {
      "get": {
        "operationId": "eventoList",
        "summary": "",
        "description": "Operação 'EventoList'.",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Página da listagem.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limite de resultados por página.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Busca textual.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Configurações de ordenamento.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "filter.calendario.id",
            "required": false,
            "in": "query",
            "description": "Filtros para 'calendario.id'.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resposta da operação \"EventoList\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventoFindAllResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Eventos"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "eventoCreate",
        "summary": "",
        "description": "Operação 'EventoCreate'.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventoInputCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Resposta da operação \"EventoCreate\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventoFindOneResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Eventos"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/eventos/{id}": {
      "get": {
        "operationId": "eventoFindById",
        "summary": "",
        "description": "Operação 'EventoFindById'.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do Registro.",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resposta da operação \"EventoFindById\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventoFindOneResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Eventos"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "operationId": "eventoUpdateById",
        "summary": "",
        "description": "Update operation",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do Registro.",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventoInputUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Resposta da operação \"EventoUpdateById\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventoFindOneResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Eventos"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "eventoDeleteById",
        "summary": "",
        "description": "Operação 'EventoDeleteById'.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do Registro.",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resposta da operação \"EventoDeleteById\".",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Eventos"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/dias-calendario": {
      "get": {
        "operationId": "diaCalendarioList",
        "summary": "",
        "description": "Operação 'DiaCalendarioList'.",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Página da listagem.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limite de resultados por página.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Busca textual.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Configurações de ordenamento.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "filter.calendario.id",
            "required": false,
            "in": "query",
            "description": "Filtros para 'calendario.id'.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resposta da operação \"DiaCalendarioList\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiaCalendarioFindAllResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Dias Calendario"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "diaCalendarioCreate",
        "summary": "",
        "description": "Operação 'DiaCalendarioCreate'.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiaCalendarioInputCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Resposta da operação \"DiaCalendarioCreate\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiaCalendarioFindOneResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Dias Calendario"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/dias-calendario/{id}": {
      "get": {
        "operationId": "diaCalendarioFindById",
        "summary": "",
        "description": "Operação 'DiaCalendarioFindById'.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do Registro.",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resposta da operação \"DiaCalendarioFindById\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiaCalendarioFindOneResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Dias Calendario"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "operationId": "diaCalendarioUpdateById",
        "summary": "",
        "description": "Update operation",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do Registro.",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiaCalendarioInputUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Resposta da operação \"DiaCalendarioUpdateById\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiaCalendarioFindOneResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Dias Calendario"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "diaCalendarioDeleteById",
        "summary": "",
        "description": "Operação 'DiaCalendarioDeleteById'.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do Registro.",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resposta da operação \"DiaCalendarioDeleteById\".",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Dias Calendario"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/diarios": {
      "get": {
        "operationId": "diarioList",
        "summary": "",
        "description": "Operação 'DiarioList'.",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Página da listagem.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limite de resultados por página.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Busca textual.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Configurações de ordenamento.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "filter.turma.id",
            "required": false,
            "in": "query",
            "description": "Filtros para 'turma.id'.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "filter.disciplina.id",
            "required": false,
            "in": "query",
            "description": "Filtros para 'disciplina.id'.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "filter.ambientePadrao.id",
            "required": false,
            "in": "query",
            "description": "Filtros para 'ambientePadrao.id'.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "filter.calendarioLetivo.id",
            "required": false,
            "in": "query",
            "description": "Filtros para 'calendarioLetivo.id'.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resposta da operação \"DiarioList\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiarioFindAllResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Diarios"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "diarioCreate",
        "summary": "",
        "description": "Operação 'DiarioCreate'.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiarioInputCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Resposta da operação \"DiarioCreate\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiarioFindOneResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Diarios"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/diarios/{id}": {
      "get": {
        "operationId": "diarioFindById",
        "summary": "",
        "description": "Operação 'DiarioFindById'.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do Registro.",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resposta da operação \"DiarioFindById\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiarioFindOneResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Diarios"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "operationId": "diarioUpdateById",
        "summary": "",
        "description": "Update operation",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do Registro.",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiarioInputUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Resposta da operação \"DiarioUpdateById\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiarioFindOneResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Diarios"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "diarioDeleteById",
        "summary": "",
        "description": "Operação 'DiarioDeleteById'.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do Registro.",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resposta da operação \"DiarioDeleteById\".",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Diarios"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/diario-professor": {
      "get": {
        "operationId": "diarioProfessorList",
        "summary": "",
        "description": "Operação 'DiarioProfessorList'.",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Página da listagem.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limite de resultados por página.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Busca textual.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Configurações de ordenamento.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "filter.vinculo.id",
            "required": false,
            "in": "query",
            "description": "Filtros para 'vinculo.id'.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "filter.diario.id",
            "required": false,
            "in": "query",
            "description": "Filtros para 'diario.id'.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resposta da operação \"DiarioProfessorList\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiarioProfessorFindAllResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "DiarioProfessor"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "diarioProfessorCreate",
        "summary": "",
        "description": "Operação 'DiarioProfessorCreate'.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiarioProfessorInputCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Resposta da operação \"DiarioProfessorCreate\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiarioProfessorFindOneResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "DiarioProfessor"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/diario-professor/{id}": {
      "get": {
        "operationId": "diarioProfessorFindById",
        "summary": "",
        "description": "Operação 'DiarioProfessorFindById'.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do Registro.",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resposta da operação \"DiarioProfessorFindById\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiarioProfessorFindOneResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "DiarioProfessor"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "operationId": "diarioProfessorUpdateById",
        "summary": "",
        "description": "Update operation",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do Registro.",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiarioProfessorInputUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Resposta da operação \"DiarioProfessorUpdateById\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiarioProfessorFindOneResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "DiarioProfessor"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "diarioProfessorDeleteById",
        "summary": "",
        "description": "Operação 'DiarioProfessorDeleteById'.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do Registro.",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resposta da operação \"DiarioProfessorDeleteById\".",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "DiarioProfessor"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/etapas": {
      "get": {
        "operationId": "etapaList",
        "summary": "",
        "description": "Operação 'EtapaList'.",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Página da listagem.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limite de resultados por página.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Busca textual.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Configurações de ordenamento.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "filter.calendario.id",
            "required": false,
            "in": "query",
            "description": "Filtros para 'calendario.id'.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resposta da operação \"EtapaList\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EtapaFindAllResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Etapas"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "etapaCreate",
        "summary": "",
        "description": "Operação 'EtapaCreate'.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EtapaInputCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Resposta da operação \"EtapaCreate\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EtapaFindOneResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Etapas"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/etapas/{id}": {
      "get": {
        "operationId": "etapaFindById",
        "summary": "",
        "description": "Operação 'EtapaFindById'.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do Registro.",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resposta da operação \"EtapaFindById\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EtapaFindOneResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Etapas"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "operationId": "etapaUpdateById",
        "summary": "",
        "description": "Update operation",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do Registro.",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EtapaInputUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Resposta da operação \"EtapaUpdateById\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EtapaFindOneResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Etapas"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "etapaDeleteById",
        "summary": "",
        "description": "Operação 'EtapaDeleteById'.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do Registro.",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resposta da operação \"EtapaDeleteById\".",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Etapas"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/aulas": {
      "get": {
        "operationId": "aulaList",
        "summary": "",
        "description": "Operação 'AulaList'.",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Página da listagem.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limite de resultados por página.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Busca textual.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Configurações de ordenamento.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "filter.diario.id",
            "required": false,
            "in": "query",
            "description": "Filtros para 'diario.id'.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "filter.ambiente.id",
            "required": false,
            "in": "query",
            "description": "Filtros para 'ambiente.id'.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resposta da operação \"AulaList\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AulaFindAllResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Aulas"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "aulaCreate",
        "summary": "",
        "description": "Operação 'AulaCreate'.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AulaInputCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Resposta da operação \"AulaCreate\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AulaFindOneResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Aulas"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/aulas/{id}": {
      "get": {
        "operationId": "aulaFindById",
        "summary": "",
        "description": "Operação 'AulaFindById'.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do Registro.",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resposta da operação \"AulaFindById\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AulaFindOneResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Aulas"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "operationId": "aulaUpdateById",
        "summary": "",
        "description": "Update operation",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do Registro.",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AulaInputUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Resposta da operação \"AulaUpdateById\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AulaFindOneResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Aulas"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "aulaDeleteById",
        "summary": "",
        "description": "Operação 'AulaDeleteById'.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do Registro.",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resposta da operação \"AulaDeleteById\".",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Aulas"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/turmas-disponibilidade": {
      "get": {
        "operationId": "turmaDisponibilidadeList",
        "summary": "",
        "description": "Operação 'TurmaDisponibilidadeList'.",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Página da listagem.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limite de resultados por página.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Busca textual.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Configurações de ordenamento.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "filter.turma.id",
            "required": false,
            "in": "query",
            "description": "Filtros para 'turma.id'.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resposta da operação \"TurmaDisponibilidadeList\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TurmaDisponibilidadeFindAllResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Turmas Disponibilidade"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "turmaDisponibilidadeCreate",
        "summary": "",
        "description": "Operação 'TurmaDisponibilidadeCreate'.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TurmaDisponibilidadeInputCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Resposta da operação \"TurmaDisponibilidadeCreate\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TurmaDisponibilidadeFindOneResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Turmas Disponibilidade"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/turmas-disponibilidade/{id}": {
      "get": {
        "operationId": "turmaDisponibilidadeFindById",
        "summary": "",
        "description": "Operação 'TurmaDisponibilidadeFindById'.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do Registro.",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resposta da operação \"TurmaDisponibilidadeFindById\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TurmaDisponibilidadeFindOneResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Turmas Disponibilidade"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "operationId": "turmaDisponibilidadeUpdateById",
        "summary": "",
        "description": "Update operation",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do Registro.",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TurmaDisponibilidadeInputUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Resposta da operação \"TurmaDisponibilidadeUpdateById\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TurmaDisponibilidadeFindOneResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Turmas Disponibilidade"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "turmaDisponibilidadeDeleteById",
        "summary": "",
        "description": "Operação 'TurmaDisponibilidadeDeleteById'.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do Registro.",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resposta da operação \"TurmaDisponibilidadeDeleteById\".",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Turmas Disponibilidade"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/turmas-disponibilidade-dia": {
      "get": {
        "operationId": "turmaDisponibilidadeDiaList",
        "summary": "",
        "description": "Operação 'TurmaDisponibilidadeDiaList'.",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Página da listagem.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limite de resultados por página.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Busca textual.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Configurações de ordenamento.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "filter.intervaloDeTempo.id",
            "required": false,
            "in": "query",
            "description": "Filtros para 'intervaloDeTempo.id'.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "filter.turmaDisponibilidade.id",
            "required": false,
            "in": "query",
            "description": "Filtros para 'turmaDisponibilidade.id'.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resposta da operação \"TurmaDisponibilidadeDiaList\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TurmaDisponibilidadeDiaFindAllResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Turmas Disponibilidade Dia"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "turmaDisponibilidadeDiaCreate",
        "summary": "",
        "description": "Operação 'TurmaDisponibilidadeDiaCreate'.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TurmaDisponibilidadeDiaInputCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Resposta da operação \"TurmaDisponibilidadeDiaCreate\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TurmaDisponibilidadeDiaFindOneResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Turmas Disponibilidade Dia"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/turmas-disponibilidade-dia/{id}": {
      "get": {
        "operationId": "turmaDisponibilidadeDiaFindById",
        "summary": "",
        "description": "Operação 'TurmaDisponibilidadeDiaFindById'.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do Registro.",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resposta da operação \"TurmaDisponibilidadeDiaFindById\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TurmaDisponibilidadeDiaFindOneResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Turmas Disponibilidade Dia"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "operationId": "turmaDisponibilidadeDiaUpdateById",
        "summary": "",
        "description": "Update operation",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do Registro.",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TurmaDisponibilidadeDiaInputUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Resposta da operação \"TurmaDisponibilidadeDiaUpdateById\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TurmaDisponibilidadeDiaFindOneResultDto"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Turmas Disponibilidade Dia"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "turmaDisponibilidadeDiaDeleteById",
        "summary": "",
        "description": "Operação 'TurmaDisponibilidadeDiaDeleteById'.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do Registro.",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resposta da operação \"TurmaDisponibilidadeDiaDeleteById\".",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "tags": [
          "Turmas Disponibilidade Dia"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    }
  },
  "info": {
    "title": "Ladesa - API",
    "description": "API para a consulta e manipulação de dados e procedimentos relacionados ao Sistema de Gestão Acadêmico.",
    "version": "0.0",
    "contact": {}
  },
  "tags": [
    {
      "name": "Base",
      "description": "Ladesa - Base"
    },
    {
      "name": "Arquivos",
      "description": "Armazenamento / Arquivos"
    },
    {
      "name": "Autenticacao",
      "description": ""
    },
    {
      "name": "Usuarios",
      "description": "Autenticação / Usuários"
    },
    {
      "name": "Estados",
      "description": "Ambientes / Estados"
    },
    {
      "name": "Cidades",
      "description": "Ambientes / Cidades"
    },
    {
      "name": "Campi",
      "description": "Ambientes / Campi"
    },
    {
      "name": "Blocos",
      "description": "Ambientes / Campi / Blocos"
    },
    {
      "name": "Ambientes",
      "description": "Ambientes / Campi / Blocos / Ambiente"
    },
    {
      "name": "Reservas",
      "description": "Ambientes / Campi / Blocos / Ambiente / Reservas"
    },
    {
      "name": "Vinculos",
      "description": "Autenticação / Usuários / Vínculos"
    },
    {
      "name": "Modalidades",
      "description": "Ensino / Modalidade"
    },
    {
      "name": "Cursos",
      "description": "Ensino / Cursos"
    },
    {
      "name": "Disciplinas",
      "description": "Ensino / Disciplinas"
    },
    {
      "name": "Turmas",
      "description": "Ensino / Turmas"
    },
    {
      "name": "Diarios",
      "description": "Ensino / Diarios"
    },
    {
      "name": "DiarioProfessor",
      "description": "Ensino / Diário Professor"
    },
    {
      "name": "Calendarios Letivos",
      "description": "Calendario / Calendarios Letivos"
    }
  ],
  "servers": [],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    },
    "schemas": {
      "ArquivoFindOneResultDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": false,
            "description": "Nome."
          },
          "mimeType": {
            "type": "string",
            "nullable": false,
            "description": "Mime-type."
          },
          "sizeBytes": {
            "type": "integer",
            "nullable": false,
            "description": "Tamanho (em bytes)."
          },
          "storageType": {
            "type": "string",
            "nullable": false,
            "description": "Estratégia de armazenamento."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": false,
            "description": "ID do Registro."
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time",
            "nullable": false,
            "description": "Data de Criação do Registro."
          },
          "dateUpdated": {
            "type": "string",
            "format": "date-time",
            "nullable": false,
            "description": "Data de Atualização do Registro."
          },
          "dateDeleted": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Data de Exclusão do Registro."
          }
        },
        "required": [
          "name",
          "mimeType",
          "sizeBytes",
          "storageType",
          "id",
          "dateCreated",
          "dateUpdated",
          "dateDeleted"
        ]
      },
      "ImagemArquivoFindOneFromImagemResultDto": {
        "type": "object",
        "properties": {
          "largura": {
            "type": "integer",
            "nullable": true,
            "description": "Largura da imagem."
          },
          "altura": {
            "type": "integer",
            "nullable": true,
            "description": "Altura da imagem."
          },
          "formato": {
            "type": "string",
            "nullable": false,
            "description": "Formato da imagem."
          },
          "mimeType": {
            "type": "string",
            "nullable": false,
            "description": "Mime Type da imagem."
          },
          "arquivo": {
            "nullable": false,
            "description": "Arquivo.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ArquivoFindOneResultDto"
              }
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": false,
            "description": "ID do Registro."
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time",
            "nullable": false,
            "description": "Data de Criação do Registro."
          },
          "dateUpdated": {
            "type": "string",
            "format": "date-time",
            "nullable": false,
            "description": "Data de Atualização do Registro."
          },
          "dateDeleted": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Data de Exclusão do Registro."
          }
        },
        "required": [
          "largura",
          "altura",
          "formato",
          "mimeType",
          "arquivo",
          "id",
          "dateCreated",
          "dateUpdated",
          "dateDeleted"
        ]
      },
      "ImagemDto": {
        "type": "object",
        "properties": {
          "descricao": {
            "type": "string",
            "nullable": false,
            "description": "Descrição."
          },
          "versoes": {
            "nullable": false,
            "description": "Versões.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImagemArquivoFindOneFromImagemResultDto"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": false,
            "description": "ID do Registro."
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time",
            "nullable": false,
            "description": "Data de Criação do Registro."
          },
          "dateUpdated": {
            "type": "string",
            "format": "date-time",
            "nullable": false,
            "description": "Data de Atualização do Registro."
          },
          "dateDeleted": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Data de Exclusão do Registro."
          }
        },
        "required": [
          "descricao",
          "versoes",
          "id",
          "dateCreated",
          "dateUpdated",
          "dateDeleted"
        ]
      },
      "UsuarioFindOneResultDto": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string",
            "nullable": false,
            "description": "Nome do usuário."
          },
          "matriculaSiape": {
            "type": "string",
            "nullable": false,
            "description": "Matrícula Siape do usuário."
          },
          "email": {
            "type": "string",
            "format": "e-mail",
            "nullable": false,
            "description": "E-mail do usuário."
          },
          "isSuperUser": {
            "type": "boolean",
            "nullable": false,
            "description": "Indentifica é um super usuário."
          },
          "imagemCapa": {
            "nullable": true,
            "description": "Imagem de capa",
            "allOf": [
              {
                "$ref": "#/components/schemas/ImagemDto"
              }
            ]
          },
          "imagemPerfil": {
            "nullable": true,
            "description": "Imagem de perfil",
            "allOf": [
              {
                "$ref": "#/components/schemas/ImagemDto"
              }
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": false,
            "description": "ID do Registro."
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time",
            "nullable": false,
            "description": "Data de Criação do Registro."
          },
          "dateUpdated": {
            "type": "string",
            "format": "date-time",
            "nullable": false,
            "description": "Data de Atualização do Registro."
          },
          "dateDeleted": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Data de Exclusão do Registro."
          }
        },
        "required": [
          "nome",
          "matriculaSiape",
          "email",
          "isSuperUser",
          "imagemCapa",
          "imagemPerfil",
          "id",
          "dateCreated",
          "dateUpdated",
          "dateDeleted"
        ]
      },
      "EstadoFindOneResultDto": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string",
            "nullable": false,
            "description": "Nome oficial do Estado."
          },
          "sigla": {
            "type": "string",
            "nullable": false,
            "description": "Sigla do Estado."
          },
          "id": {
            "type": "integer",
            "nullable": false,
            "description": "ID do Registro."
          }
        },
        "required": [
          "nome",
          "sigla",
          "id"
        ]
      },
      "CidadeFindOneResultDto": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string",
            "nullable": false,
            "description": "Nome oficial da Cidade."
          },
          "estado": {
            "nullable": false,
            "description": "Estado da Cidade.",
            "allOf": [
              {
                "$ref": "#/components/schemas/EstadoFindOneResultDto"
              }
            ]
          },
          "id": {
            "type": "integer",
            "nullable": false,
            "description": "ID do Registro."
          }
        },
        "required": [
          "nome",
          "estado",
          "id"
        ]
      },
      "EnderecoFindOneResultDto": {
        "type": "object",
        "properties": {
          "cep": {
            "type": "string",
            "nullable": false,
            "description": ""
          },
          "logradouro": {
            "type": "string",
            "nullable": false,
            "description": "Logradouro"
          },
          "numero": {
            "type": "integer",
            "nullable": false,
            "description": "Número"
          },
          "bairro": {
            "type": "string",
            "nullable": false,
            "description": "Bairro"
          },
          "complemento": {
            "type": "string",
            "nullable": true,
            "description": "Complemento"
          },
          "pontoReferencia": {
            "type": "string",
            "nullable": true,
            "description": "Ponto de referência"
          },
          "cidade": {
            "nullable": false,
            "description": "Cidade",
            "allOf": [
              {
                "$ref": "#/components/schemas/CidadeFindOneResultDto"
              }
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": false,
            "description": "ID do Registro."
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time",
            "nullable": false,
            "description": "Data de Criação do Registro."
          },
          "dateUpdated": {
            "type": "string",
            "format": "date-time",
            "nullable": false,
            "description": "Data de Atualização do Registro."
          },
          "dateDeleted": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Data de Exclusão do Registro."
          }
        },
        "required": [
          "cep",
          "logradouro",
          "numero",
          "bairro",
          "complemento",
          "pontoReferencia",
          "cidade",
          "id",
          "dateCreated",
          "dateUpdated",
          "dateDeleted"
        ]
      },
      "CampusFindOneResultDto": {
        "type": "object",
        "properties": {
          "nomeFantasia": {
            "type": "string",
            "nullable": false,
            "description": "Nome fantasia do Campus."
          },
          "razaoSocial": {
            "type": "string",
            "nullable": false,
            "description": "Razão social do Campus."
          },
          "apelido": {
            "type": "string",
            "nullable": false,
            "description": "Apelido do Campus."
          },
          "cnpj": {
            "type": "string",
            "nullable": false,
            "description": "CNPJ do Campus."
          },
          "endereco": {
            "nullable": false,
            "description": "Endereço do Campus",
            "allOf": [
              {
                "$ref": "#/components/schemas/EnderecoFindOneResultDto"
              }
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": false,
            "description": "ID do Registro."
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time",
            "nullable": false,
            "description": "Data de Criação do Registro."
          },
          "dateUpdated": {
            "type": "string",
            "format": "date-time",
            "nullable": false,
            "description": "Data de Atualização do Registro."
          },
          "dateDeleted": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Data de Exclusão do Registro."
          }
        },
        "required": [
          "nomeFantasia",
          "razaoSocial",
          "apelido",
          "cnpj",
          "endereco",
          "id",
          "dateCreated",
          "dateUpdated",
          "dateDeleted"
        ]
      },
      "VinculoFindOneResultDto": {
        "type": "object",
        "properties": {
          "ativo": {
            "type": "boolean",
            "nullable": false,
            "description": "Indica se o vínculo está ativo."
          },
          "cargo": {
            "type": "string",
            "nullable": false,
            "description": "Cargo do usuário no vínculo."
          },
          "campus": {
            "nullable": false,
            "description": "Campus associado ao vínculo.",
            "allOf": [
              {
                "$ref": "#/components/schemas/CampusFindOneResultDto"
              }
            ]
          },
          "usuario": {
            "nullable": false,
            "description": "Usuário associado ao vínculo.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UsuarioFindOneResultDto"
              }
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": false,
            "description": "ID do Registro."
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time",
            "nullable": false,
            "description": "Data de Criação do Registro."
          },
          "dateUpdated": {
            "type": "string",
            "format": "date-time",
            "nullable": false,
            "description": "Data de Atualização do Registro."
          },
          "dateDeleted": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Data de Exclusão do Registro."
          }
        },
        "required": [
          "ativo",
          "cargo",
          "campus",
          "usuario",
          "id",
          "dateCreated",
          "dateUpdated",
          "dateDeleted"
        ]
      },
      "AuthWhoAmIResultDto": {
        "type": "object",
        "properties": {
          "usuario": {
            "nullable": true,
            "description": "Usuário autenticado.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UsuarioFindOneResultDto"
              }
            ]
          },
          "vinculosAtivos": {
            "nullable": false,
            "description": "Vínculos do usuário logado.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VinculoFindOneResultDto"
            }
          }
        },
        "required": [
          "usuario",
          "vinculosAtivos"
        ]
      },
      "AuthLoginInputDto": {
        "type": "object",
        "properties": {
          "matriculaSiape": {
            "type": "string",
            "nullable": false,
            "description": "Matrícula SIAPE."
          },
          "senha": {
            "type": "string",
            "nullable": false,
            "description": "Senha do usuário."
          }
        },
        "required": [
          "matriculaSiape",
          "senha"
        ]
      },
      "AuthSessionCredentialsDto": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "nullable": true,
            "description": "Token de acesso."
          },
          "token_type": {
            "type": "string",
            "nullable": true,
            "description": "Tipo do token."
          },
          "id_token": {
            "type": "string",
            "nullable": true,
            "description": "Token de identificação."
          },
          "refresh_token": {
            "type": "string",
            "nullable": true,
            "description": "Token de refresh."
          },
          "expires_in": {
            "type": "integer",
            "nullable": true,
            "description": "Tempo de expiração do token."
          },
          "expires_at": {
            "type": "integer",
            "nullable": true,
            "description": "Tempo de expiração do token."
          },
          "session_state": {
            "type": "string",
            "nullable": true,
            "description": "Estado da sessão."
          },
          "scope": {
            "type": "string",
            "nullable": true,
            "description": "Escopo da autenticação."
          }
        },
        "required": [
          "access_token",
          "token_type",
          "id_token",
          "refresh_token",
          "expires_in",
          "expires_at",
          "session_state",
          "scope"
        ]
      },
      "AuthRefreshInputDto": {
        "type": "object",
        "properties": {
          "refreshToken": {
            "type": "string",
            "nullable": false,
            "description": "Token de refresh."
          }
        },
        "required": [
          "refreshToken"
        ]
      },
      "AuthSetInitialPasswordInputDto": {
        "type": "object",
        "properties": {
          "matriculaSiape": {
            "type": "string",
            "nullable": false,
            "description": "Matrícula SIAPE."
          },
          "senha": {
            "type": "string",
            "nullable": false,
            "description": "Nova senha."
          }
        },
        "required": [
          "matriculaSiape",
          "senha"
        ]
      },
      "PaginatedSortByDto": {
        "type": "object",
        "properties": {
          "property": {
            "type": "string",
            "nullable": false,
            "description": "Propriedade ordenada."
          },
          "mode": {
            "type": "string",
            "nullable": false,
            "description": "Modo de ordenação."
          }
        },
        "required": [
          "property",
          "mode"
        ]
      },
      "PaginatedResultMetaFilterDto": {
        "type": "object",
        "properties": {
          "property": {
            "type": "string",
            "nullable": false,
            "description": "Propriedade filtrada."
          },
          "restrictions": {
            "nullable": false,
            "description": "Restrições de filtragem",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "property",
          "restrictions"
        ]
      },
      "PaginatedResultMetaDto": {
        "type": "object",
        "properties": {
          "itemsPerPage": {
            "type": "integer",
            "nullable": false,
            "description": "Quantidade de itens por página."
          },
          "totalItems": {
            "type": "integer",
            "nullable": false,
            "description": "Total de itens."
          },
          "currentPage": {
            "type": "integer",
            "nullable": false,
            "description": "Página atual."
          },
          "totalPages": {
            "type": "integer",
            "nullable": false,
            "description": "Quantidade total de páginas."
          },
          "search": {
            "type": "string",
            "nullable": false,
            "description": "Termo textual da busca."
          },
          "sortBy": {
            "nullable": false,
            "description": "Ordenação.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaginatedSortByDto"
            }
          },
          "filter": {
            "nullable": false,
            "description": "Filtros",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaginatedResultMetaFilterDto"
            }
          }
        },
        "required": [
          "itemsPerPage",
          "totalItems",
          "currentPage",
          "totalPages",
          "search",
          "sortBy",
          "filter"
        ]
      },
      "PaginatedResultLinksDto": {
        "type": "object",
        "properties": {
          "first": {
            "type": "string",
            "nullable": true,
            "description": ""
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "description": ""
          },
          "current": {
            "type": "string",
            "nullable": false,
            "description": ""
          },
          "next": {
            "type": "string",
            "nullable": true,
            "description": ""
          },
          "last": {
            "type": "string",
            "nullable": true,
            "description": ""
          }
        },
        "required": [
          "first",
          "previous",
          "current",
          "next",
          "last"
        ]
      },
      "UsuarioFindAllResultDto": {
        "type": "object",
        "properties": {
          "meta": {
            "nullable": false,
            "description": "Metadados da busca.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultMetaDto"
              }
            ]
          },
          "data": {
            "nullable": false,
            "description": "Resultados da busca atual.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UsuarioFindOneResultDto"
            }
          },
          "links": {
            "nullable": false,
            "description": "Links da busca.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultLinksDto"
              }
            ]
          }
        },
        "required": [
          "meta",
          "data",
          "links"
        ]
      },
      "UsuarioInputCreateDto": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string",
            "nullable": false,
            "description": "Nome do usuário."
          },
          "matriculaSiape": {
            "type": "string",
            "nullable": false,
            "description": "Matrícula Siape do usuário."
          },
          "email": {
            "type": "string",
            "format": "e-mail",
            "nullable": false,
            "description": "E-mail do usuário."
          }
        },
        "required": [
          "nome",
          "matriculaSiape",
          "email"
        ]
      },
      "UsuarioInputUpdateDto": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string",
            "nullable": false,
            "description": "Nome do usuário."
          },
          "matriculaSiape": {
            "type": "string",
            "nullable": false,
            "description": "Matrícula Siape do usuário."
          },
          "email": {
            "type": "string",
            "format": "e-mail",
            "nullable": false,
            "description": "E-mail do usuário."
          }
        }
      },
      "VinculoFindAllResultDto": {
        "type": "object",
        "properties": {
          "meta": {
            "nullable": false,
            "description": "Metadados da busca.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultMetaDto"
              }
            ]
          },
          "data": {
            "nullable": false,
            "description": "Resultados da busca atual.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VinculoFindOneResultDto"
            }
          },
          "links": {
            "nullable": false,
            "description": "Links da busca.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultLinksDto"
              }
            ]
          }
        },
        "required": [
          "meta",
          "data",
          "links"
        ]
      },
      "CampusFindOneInputDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": false,
            "description": "ID do Registro."
          }
        },
        "required": [
          "id"
        ]
      },
      "UsuarioFindOneInputDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": false,
            "description": "ID do Registro."
          }
        },
        "required": [
          "id"
        ]
      },
      "VinculoUpdateInputDto": {
        "type": "object",
        "properties": {
          "campus": {
            "nullable": false,
            "description": "Campus associado ao vínculo.",
            "allOf": [
              {
                "$ref": "#/components/schemas/CampusFindOneInputDto"
              }
            ]
          },
          "usuario": {
            "nullable": false,
            "description": "Usuário associado ao vínculo.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UsuarioFindOneInputDto"
              }
            ]
          },
          "cargos": {
            "nullable": false,
            "description": "Cargos do usuário no vínculo.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "campus",
          "usuario",
          "cargos"
        ]
      },
      "CampusFindAllResultDto": {
        "type": "object",
        "properties": {
          "meta": {
            "nullable": false,
            "description": "Metadados da busca.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultMetaDto"
              }
            ]
          },
          "data": {
            "nullable": false,
            "description": "Resultados da busca atual.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CampusFindOneResultDto"
            }
          },
          "links": {
            "nullable": false,
            "description": "Links da busca.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultLinksDto"
              }
            ]
          }
        },
        "required": [
          "meta",
          "data",
          "links"
        ]
      },
      "CidadeFindOneInputDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "nullable": false,
            "description": "ID do Registro."
          }
        },
        "required": [
          "id"
        ]
      },
      "EnderecoInputDto": {
        "type": "object",
        "properties": {
          "cep": {
            "type": "string",
            "nullable": false,
            "description": ""
          },
          "logradouro": {
            "type": "string",
            "nullable": false,
            "description": "Logradouro"
          },
          "numero": {
            "type": "integer",
            "nullable": false,
            "description": "Número"
          },
          "bairro": {
            "type": "string",
            "nullable": false,
            "description": "Bairro"
          },
          "complemento": {
            "type": "string",
            "nullable": true,
            "description": "Complemento"
          },
          "pontoReferencia": {
            "type": "string",
            "nullable": true,
            "description": "Ponto de referência"
          },
          "cidade": {
            "nullable": false,
            "description": "Cidade",
            "allOf": [
              {
                "$ref": "#/components/schemas/CidadeFindOneInputDto"
              }
            ]
          }
        },
        "required": [
          "cep",
          "logradouro",
          "numero",
          "bairro",
          "complemento",
          "pontoReferencia",
          "cidade"
        ]
      },
      "CampusInputCreateDto": {
        "type": "object",
        "properties": {
          "nomeFantasia": {
            "type": "string",
            "nullable": false,
            "description": "Nome fantasia do Campus."
          },
          "razaoSocial": {
            "type": "string",
            "nullable": false,
            "description": "Razão social do Campus."
          },
          "apelido": {
            "type": "string",
            "nullable": false,
            "description": "Apelido do Campus."
          },
          "cnpj": {
            "type": "string",
            "nullable": false,
            "description": "CNPJ do Campus."
          },
          "endereco": {
            "nullable": false,
            "description": "Endereço do Campus",
            "allOf": [
              {
                "$ref": "#/components/schemas/EnderecoInputDto"
              }
            ]
          }
        },
        "required": [
          "nomeFantasia",
          "razaoSocial",
          "apelido",
          "cnpj",
          "endereco"
        ]
      },
      "CampusInputUpdateDto": {
        "type": "object",
        "properties": {
          "nomeFantasia": {
            "type": "string",
            "nullable": false,
            "description": "Nome fantasia do Campus."
          },
          "razaoSocial": {
            "type": "string",
            "nullable": false,
            "description": "Razão social do Campus."
          },
          "apelido": {
            "type": "string",
            "nullable": false,
            "description": "Apelido do Campus."
          },
          "cnpj": {
            "type": "string",
            "nullable": false,
            "description": "CNPJ do Campus."
          },
          "endereco": {
            "nullable": false,
            "description": "Endereço do Campus",
            "allOf": [
              {
                "$ref": "#/components/schemas/EnderecoInputDto"
              }
            ]
          }
        }
      },
      "ModalidadeFindOneResultDto": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string",
            "nullable": false,
            "description": "Nome da modalidade."
          },
          "slug": {
            "type": "string",
            "nullable": false,
            "description": "Slug da modalidade."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": false,
            "description": "ID do Registro."
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time",
            "nullable": false,
            "description": "Data de Criação do Registro."
          },
          "dateUpdated": {
            "type": "string",
            "format": "date-time",
            "nullable": false,
            "description": "Data de Atualização do Registro."
          },
          "dateDeleted": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Data de Exclusão do Registro."
          }
        },
        "required": [
          "nome",
          "slug",
          "id",
          "dateCreated",
          "dateUpdated",
          "dateDeleted"
        ]
      },
      "ModalidadeFindAllResultDto": {
        "type": "object",
        "properties": {
          "meta": {
            "nullable": false,
            "description": "Metadados da busca.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultMetaDto"
              }
            ]
          },
          "data": {
            "nullable": false,
            "description": "Resultados da busca atual.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModalidadeFindOneResultDto"
            }
          },
          "links": {
            "nullable": false,
            "description": "Links da busca.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultLinksDto"
              }
            ]
          }
        },
        "required": [
          "meta",
          "data",
          "links"
        ]
      },
      "ModalidadeInputCreateDto": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string",
            "nullable": false,
            "description": "Nome da modalidade."
          },
          "slug": {
            "type": "string",
            "nullable": false,
            "description": "Slug da modalidade."
          }
        },
        "required": [
          "nome",
          "slug"
        ]
      },
      "ModalidadeInputUpdateDto": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string",
            "nullable": false,
            "description": "Nome da modalidade."
          },
          "slug": {
            "type": "string",
            "nullable": false,
            "description": "Slug da modalidade."
          }
        }
      },
      "EstadoFindAllResultDto": {
        "type": "object",
        "properties": {
          "meta": {
            "nullable": false,
            "description": "Metadados da busca.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultMetaDto"
              }
            ]
          },
          "data": {
            "nullable": false,
            "description": "Resultados da busca atual.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EstadoFindOneResultDto"
            }
          },
          "links": {
            "nullable": false,
            "description": "Links da busca.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultLinksDto"
              }
            ]
          }
        },
        "required": [
          "meta",
          "data",
          "links"
        ]
      },
      "CidadeFindAllResultDto": {
        "type": "object",
        "properties": {
          "meta": {
            "nullable": false,
            "description": "Metadados da busca.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultMetaDto"
              }
            ]
          },
          "data": {
            "nullable": false,
            "description": "Resultados da busca atual.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CidadeFindOneResultDto"
            }
          },
          "links": {
            "nullable": false,
            "description": "Links da busca.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultLinksDto"
              }
            ]
          }
        },
        "required": [
          "meta",
          "data",
          "links"
        ]
      },
      "ImagemFindOneResultDto": {
        "type": "object",
        "properties": {
          "descricao": {
            "type": "string",
            "nullable": false,
            "description": "Descrição."
          },
          "versoes": {
            "nullable": false,
            "description": "Versões.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImagemArquivoFindOneFromImagemResultDto"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": false,
            "description": "ID do Registro."
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time",
            "nullable": false,
            "description": "Data de Criação do Registro."
          },
          "dateUpdated": {
            "type": "string",
            "format": "date-time",
            "nullable": false,
            "description": "Data de Atualização do Registro."
          },
          "dateDeleted": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Data de Exclusão do Registro."
          }
        },
        "required": [
          "descricao",
          "versoes",
          "id",
          "dateCreated",
          "dateUpdated",
          "dateDeleted"
        ]
      },
      "BlocoFindOneResultDto": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string",
            "nullable": false,
            "description": "Nome do Bloco."
          },
          "codigo": {
            "type": "string",
            "nullable": false,
            "description": "Código do Bloco."
          },
          "campus": {
            "nullable": false,
            "description": "Campus.",
            "allOf": [
              {
                "$ref": "#/components/schemas/CampusFindOneResultDto"
              }
            ]
          },
          "imagemCapa": {
            "nullable": true,
            "description": "Imagem de capa",
            "allOf": [
              {
                "$ref": "#/components/schemas/ImagemFindOneResultDto"
              }
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": false,
            "description": "ID do Registro."
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time",
            "nullable": false,
            "description": "Data de Criação do Registro."
          },
          "dateUpdated": {
            "type": "string",
            "format": "date-time",
            "nullable": false,
            "description": "Data de Atualização do Registro."
          },
          "dateDeleted": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Data de Exclusão do Registro."
          }
        },
        "required": [
          "nome",
          "codigo",
          "campus",
          "imagemCapa",
          "id",
          "dateCreated",
          "dateUpdated",
          "dateDeleted"
        ]
      },
      "BlocoFindAllResultDto": {
        "type": "object",
        "properties": {
          "meta": {
            "nullable": false,
            "description": "Metadados da busca.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultMetaDto"
              }
            ]
          },
          "data": {
            "nullable": false,
            "description": "Resultados da busca atual.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BlocoFindOneResultDto"
            }
          },
          "links": {
            "nullable": false,
            "description": "Links da busca.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultLinksDto"
              }
            ]
          }
        },
        "required": [
          "meta",
          "data",
          "links"
        ]
      },
      "BlocoInputCreateDto": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string",
            "nullable": false,
            "description": "Nome do Bloco."
          },
          "codigo": {
            "type": "string",
            "nullable": false,
            "description": "Código do Bloco."
          },
          "campus": {
            "nullable": false,
            "description": "Campus.",
            "allOf": [
              {
                "$ref": "#/components/schemas/CampusFindOneInputDto"
              }
            ]
          }
        },
        "required": [
          "nome",
          "codigo",
          "campus"
        ]
      },
      "BlocoInputUpdateDto": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string",
            "nullable": false,
            "description": "Nome do Bloco."
          },
          "codigo": {
            "type": "string",
            "nullable": false,
            "description": "Código do Bloco."
          },
          "campus": {
            "nullable": false,
            "description": "Campus.",
            "allOf": [
              {
                "$ref": "#/components/schemas/CampusFindOneInputDto"
              }
            ]
          }
        }
      },
      "AmbienteFindOneResultDto": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string",
            "nullable": false,
            "description": "Nome do ambiente/sala."
          },
          "descricao": {
            "type": "string",
            "nullable": true,
            "description": "Descrição do ambiente/sala."
          },
          "codigo": {
            "type": "string",
            "nullable": false,
            "description": "Código do ambiente/sala."
          },
          "capacidade": {
            "type": "integer",
            "nullable": true,
            "description": "Capacidade do ambiente/sala."
          },
          "tipo": {
            "type": "string",
            "nullable": true,
            "description": "Tipo do ambiente/sala. Ex.: sala aula, auditório, laboratório de química."
          },
          "bloco": {
            "nullable": false,
            "description": "Bloco que o ambiente/sala pertence.",
            "allOf": [
              {
                "$ref": "#/components/schemas/BlocoFindOneResultDto"
              }
            ]
          },
          "imagemCapa": {
            "nullable": true,
            "description": "Imagem de capa",
            "allOf": [
              {
                "$ref": "#/components/schemas/ImagemFindOneResultDto"
              }
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": false,
            "description": "ID do Registro."
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time",
            "nullable": false,
            "description": "Data de Criação do Registro."
          },
          "dateUpdated": {
            "type": "string",
            "format": "date-time",
            "nullable": false,
            "description": "Data de Atualização do Registro."
          },
          "dateDeleted": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Data de Exclusão do Registro."
          }
        },
        "required": [
          "nome",
          "descricao",
          "codigo",
          "capacidade",
          "tipo",
          "bloco",
          "imagemCapa",
          "id",
          "dateCreated",
          "dateUpdated",
          "dateDeleted"
        ]
      },
      "AmbienteFindAllResultDto": {
        "type": "object",
        "properties": {
          "meta": {
            "nullable": false,
            "description": "Metadados da busca.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultMetaDto"
              }
            ]
          },
          "data": {
            "nullable": false,
            "description": "Resultados da busca atual.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AmbienteFindOneResultDto"
            }
          },
          "links": {
            "nullable": false,
            "description": "Links da busca.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultLinksDto"
              }
            ]
          }
        },
        "required": [
          "meta",
          "data",
          "links"
        ]
      },
      "BlocoFindOneInputDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": false,
            "description": "ID do Registro."
          }
        },
        "required": [
          "id"
        ]
      },
      "AmbienteInputCreateDto": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string",
            "nullable": false,
            "description": "Nome do ambiente/sala."
          },
          "descricao": {
            "type": "string",
            "nullable": true,
            "description": "Descrição do ambiente/sala."
          },
          "codigo": {
            "type": "string",
            "nullable": false,
            "description": "Código do ambiente/sala."
          },
          "capacidade": {
            "type": "integer",
            "nullable": true,
            "description": "Capacidade do ambiente/sala."
          },
          "tipo": {
            "type": "string",
            "nullable": true,
            "description": "Tipo do ambiente/sala. Ex.: sala aula, auditório, laboratório de química."
          },
          "bloco": {
            "nullable": false,
            "description": "Bloco que o ambiente/sala pertence.",
            "allOf": [
              {
                "$ref": "#/components/schemas/BlocoFindOneInputDto"
              }
            ]
          }
        },
        "required": [
          "nome",
          "codigo",
          "capacidade",
          "tipo",
          "bloco"
        ]
      },
      "AmbienteInputUpdateDto": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string",
            "nullable": false,
            "description": "Nome do ambiente/sala."
          },
          "descricao": {
            "type": "string",
            "nullable": true,
            "description": "Descrição do ambiente/sala."
          },
          "codigo": {
            "type": "string",
            "nullable": false,
            "description": "Código do ambiente/sala."
          },
          "capacidade": {
            "type": "integer",
            "nullable": true,
            "description": "Capacidade do ambiente/sala."
          },
          "tipo": {
            "type": "string",
            "nullable": true,
            "description": "Tipo do ambiente/sala. Ex.: sala aula, auditório, laboratório de química."
          },
          "bloco": {
            "nullable": false,
            "description": "Bloco que o ambiente/sala pertence.",
            "allOf": [
              {
                "$ref": "#/components/schemas/BlocoFindOneInputDto"
              }
            ]
          }
        }
      },
      "ReservaFindOneResultDto": {
        "type": "object",
        "properties": {
          "situacao": {
            "type": "string",
            "nullable": false,
            "description": "Situação da reserva."
          },
          "motivo": {
            "type": "string",
            "nullable": true,
            "description": "Motivo da reserva."
          },
          "tipo": {
            "type": "string",
            "nullable": true,
            "description": "Definir tipo da reserva."
          },
          "dataInicio": {
            "type": "string",
            "format": "date-time",
            "nullable": false,
            "description": "Data e hora de início da reserva."
          },
          "dataTermino": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "description": "Data e hora de término da reserva."
          },
          "usuario": {
            "nullable": false,
            "description": "Usuário que fez a reserva.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UsuarioFindOneResultDto"
              }
            ]
          },
          "ambiente": {
            "nullable": false,
            "description": "Ambiente que foi reservado.",
            "allOf": [
              {
                "$ref": "#/components/schemas/AmbienteFindOneResultDto"
              }
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": false,
            "description": "ID do Registro."
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time",
            "nullable": false,
            "description": "Data de Criação do Registro."
          },
          "dateUpdated": {
            "type": "string",
            "format": "date-time",
            "nullable": false,
            "description": "Data de Atualização do Registro."
          },
          "dateDeleted": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Data de Exclusão do Registro."
          }
        },
        "required": [
          "situacao",
          "motivo",
          "tipo",
          "dataInicio",
          "dataTermino",
          "usuario",
          "ambiente",
          "id",
          "dateCreated",
          "dateUpdated",
          "dateDeleted"
        ]
      },
      "ReservaFindAllResultDto": {
        "type": "object",
        "properties": {
          "meta": {
            "nullable": false,
            "description": "Metadados da busca.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultMetaDto"
              }
            ]
          },
          "data": {
            "nullable": false,
            "description": "Resultados da busca atual.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReservaFindOneResultDto"
            }
          },
          "links": {
            "nullable": false,
            "description": "Links da busca.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultLinksDto"
              }
            ]
          }
        },
        "required": [
          "meta",
          "data",
          "links"
        ]
      },
      "AmbienteFindOneInputDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": false,
            "description": "ID do Registro."
          }
        },
        "required": [
          "id"
        ]
      },
      "ReservaInputCreateDto": {
        "type": "object",
        "properties": {
          "situacao": {
            "type": "string",
            "nullable": false,
            "description": "Situação da reserva."
          },
          "motivo": {
            "type": "string",
            "nullable": true,
            "description": "Motivo da reserva."
          },
          "tipo": {
            "type": "string",
            "nullable": true,
            "description": "Definir tipo da reserva."
          },
          "dataInicio": {
            "type": "string",
            "format": "date-time",
            "nullable": false,
            "description": "Data e hora de início da reserva."
          },
          "dataTermino": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "description": "Data e hora de término da reserva."
          },
          "usuario": {
            "nullable": false,
            "description": "Usuário que fez a reserva.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UsuarioFindOneInputDto"
              }
            ]
          },
          "ambiente": {
            "nullable": false,
            "description": "Ambiente que foi reservado.",
            "allOf": [
              {
                "$ref": "#/components/schemas/AmbienteFindOneInputDto"
              }
            ]
          }
        },
        "required": [
          "situacao",
          "motivo",
          "tipo",
          "dataInicio",
          "dataTermino",
          "usuario",
          "ambiente"
        ]
      },
      "ReservaInputUpdateDto": {
        "type": "object",
        "properties": {
          "situacao": {
            "type": "string",
            "nullable": false,
            "description": "Situação da reserva."
          },
          "motivo": {
            "type": "string",
            "nullable": true,
            "description": "Motivo da reserva."
          },
          "tipo": {
            "type": "string",
            "nullable": true,
            "description": "Definir tipo da reserva."
          },
          "dataInicio": {
            "type": "string",
            "format": "date-time",
            "nullable": false,
            "description": "Data e hora de início da reserva."
          },
          "dataTermino": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "description": "Data e hora de término da reserva."
          },
          "usuario": {
            "nullable": false,
            "description": "Usuário que fez a reserva.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UsuarioFindOneInputDto"
              }
            ]
          },
          "ambiente": {
            "nullable": false,
            "description": "Ambiente que foi reservado.",
            "allOf": [
              {
                "$ref": "#/components/schemas/AmbienteFindOneInputDto"
              }
            ]
          }
        }
      },
      "CursoFindOneResultDto": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string",
            "nullable": false,
            "description": "Nome do curso."
          },
          "nomeAbreviado": {
            "type": "string",
            "nullable": false,
            "description": "Nome abreviado do curso."
          },
          "campus": {
            "nullable": false,
            "description": "Campus que o curso pertence.",
            "allOf": [
              {
                "$ref": "#/components/schemas/CampusFindOneResultDto"
              }
            ]
          },
          "modalidade": {
            "nullable": false,
            "description": "Modalidade a que o curso pertence.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ModalidadeFindOneResultDto"
              }
            ]
          },
          "imagemCapa": {
            "nullable": true,
            "description": "Imagem de capa",
            "allOf": [
              {
                "$ref": "#/components/schemas/ImagemFindOneResultDto"
              }
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": false,
            "description": "ID do Registro."
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time",
            "nullable": false,
            "description": "Data de Criação do Registro."
          },
          "dateUpdated": {
            "type": "string",
            "format": "date-time",
            "nullable": false,
            "description": "Data de Atualização do Registro."
          },
          "dateDeleted": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Data de Exclusão do Registro."
          }
        },
        "required": [
          "nome",
          "nomeAbreviado",
          "campus",
          "modalidade",
          "imagemCapa",
          "id",
          "dateCreated",
          "dateUpdated",
          "dateDeleted"
        ]
      },
      "CursoFindAllResultDto": {
        "type": "object",
        "properties": {
          "meta": {
            "nullable": false,
            "description": "Metadados da busca.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultMetaDto"
              }
            ]
          },
          "data": {
            "nullable": false,
            "description": "Resultados da busca atual.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CursoFindOneResultDto"
            }
          },
          "links": {
            "nullable": false,
            "description": "Links da busca.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultLinksDto"
              }
            ]
          }
        },
        "required": [
          "meta",
          "data",
          "links"
        ]
      },
      "ModalidadeFindOneInputDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": false,
            "description": "ID do Registro."
          }
        },
        "required": [
          "id"
        ]
      },
      "CursoInputCreateDto": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string",
            "nullable": false,
            "description": "Nome do curso."
          },
          "nomeAbreviado": {
            "type": "string",
            "nullable": false,
            "description": "Nome abreviado do curso."
          },
          "campus": {
            "nullable": false,
            "description": "Campus que o curso pertence.",
            "allOf": [
              {
                "$ref": "#/components/schemas/CampusFindOneInputDto"
              }
            ]
          },
          "modalidade": {
            "nullable": false,
            "description": "Modalidade a que o curso pertence.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ModalidadeFindOneInputDto"
              }
            ]
          }
        },
        "required": [
          "nome",
          "nomeAbreviado",
          "campus",
          "modalidade"
        ]
      },
      "CursoInputUpdateDto": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string",
            "nullable": false,
            "description": "Nome do curso."
          },
          "nomeAbreviado": {
            "type": "string",
            "nullable": false,
            "description": "Nome abreviado do curso."
          },
          "campus": {
            "nullable": false,
            "description": "Campus que o curso pertence.",
            "allOf": [
              {
                "$ref": "#/components/schemas/CampusFindOneInputDto"
              }
            ]
          },
          "modalidade": {
            "nullable": false,
            "description": "Modalidade a que o curso pertence.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ModalidadeFindOneInputDto"
              }
            ]
          }
        }
      },
      "DisciplinaFindOneResultDto": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string",
            "nullable": false,
            "description": "Nome da disciplina."
          },
          "nomeAbreviado": {
            "type": "string",
            "nullable": false,
            "description": "Nome abreviado da disciplina."
          },
          "cargaHoraria": {
            "type": "integer",
            "nullable": false,
            "description": "Carga horária da disciplina."
          },
          "imagemCapa": {
            "nullable": true,
            "description": "Imagem de capa",
            "allOf": [
              {
                "$ref": "#/components/schemas/ImagemFindOneResultDto"
              }
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": false,
            "description": "ID do Registro."
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time",
            "nullable": false,
            "description": "Data de Criação do Registro."
          },
          "dateUpdated": {
            "type": "string",
            "format": "date-time",
            "nullable": false,
            "description": "Data de Atualização do Registro."
          },
          "dateDeleted": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Data de Exclusão do Registro."
          }
        },
        "required": [
          "nome",
          "nomeAbreviado",
          "cargaHoraria",
          "imagemCapa",
          "id",
          "dateCreated",
          "dateUpdated",
          "dateDeleted"
        ]
      },
      "DisciplinaFindAllResultDto": {
        "type": "object",
        "properties": {
          "meta": {
            "nullable": false,
            "description": "Metadados da busca.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultMetaDto"
              }
            ]
          },
          "data": {
            "nullable": false,
            "description": "Resultados da busca atual.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DisciplinaFindOneResultDto"
            }
          },
          "links": {
            "nullable": false,
            "description": "Links da busca.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultLinksDto"
              }
            ]
          }
        },
        "required": [
          "meta",
          "data",
          "links"
        ]
      },
      "DisciplinaInputCreateDto": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string",
            "nullable": false,
            "description": "Nome da disciplina."
          },
          "nomeAbreviado": {
            "type": "string",
            "nullable": false,
            "description": "Nome abreviado da disciplina."
          },
          "cargaHoraria": {
            "type": "integer",
            "nullable": false,
            "description": "Carga horária da disciplina."
          }
        },
        "required": [
          "nome",
          "nomeAbreviado",
          "cargaHoraria"
        ]
      },
      "DisciplinaInputUpdateDto": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string",
            "nullable": false,
            "description": "Nome da disciplina."
          },
          "nomeAbreviado": {
            "type": "string",
            "nullable": false,
            "description": "Nome abreviado da disciplina."
          },
          "cargaHoraria": {
            "type": "integer",
            "nullable": false,
            "description": "Carga horária da disciplina."
          }
        }
      },
      "TurmaFindOneResultDto": {
        "type": "object",
        "properties": {
          "periodo": {
            "type": "string",
            "nullable": false,
            "description": "Período do Turma."
          },
          "curso": {
            "nullable": false,
            "description": "Curso da Turma.",
            "allOf": [
              {
                "$ref": "#/components/schemas/CursoFindOneResultDto"
              }
            ]
          },
          "ambientePadraoAula": {
            "nullable": true,
            "description": "Ambiente padrão da sala de aula.",
            "allOf": [
              {
                "$ref": "#/components/schemas/AmbienteFindOneResultDto"
              }
            ]
          },
          "imagemCapa": {
            "nullable": true,
            "description": "Imagem de capa",
            "allOf": [
              {
                "$ref": "#/components/schemas/ImagemFindOneResultDto"
              }
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": false,
            "description": "ID do Registro."
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time",
            "nullable": false,
            "description": "Data de Criação do Registro."
          },
          "dateUpdated": {
            "type": "string",
            "format": "date-time",
            "nullable": false,
            "description": "Data de Atualização do Registro."
          },
          "dateDeleted": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Data de Exclusão do Registro."
          }
        },
        "required": [
          "periodo",
          "curso",
          "imagemCapa",
          "id",
          "dateCreated",
          "dateUpdated",
          "dateDeleted"
        ]
      },
      "TurmaFindAllResultDto": {
        "type": "object",
        "properties": {
          "meta": {
            "nullable": false,
            "description": "Metadados da busca.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultMetaDto"
              }
            ]
          },
          "data": {
            "nullable": false,
            "description": "Resultados da busca atual.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TurmaFindOneResultDto"
            }
          },
          "links": {
            "nullable": false,
            "description": "Links da busca.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultLinksDto"
              }
            ]
          }
        },
        "required": [
          "meta",
          "data",
          "links"
        ]
      },
      "CursoFindOneInputDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": false,
            "description": "ID do Registro."
          }
        },
        "required": [
          "id"
        ]
      },
      "TurmaInputCreateDto": {
        "type": "object",
        "properties": {
          "periodo": {
            "type": "string",
            "nullable": false,
            "description": "Período do Turma."
          },
          "curso": {
            "nullable": false,
            "description": "Curso da Turma.",
            "allOf": [
              {
                "$ref": "#/components/schemas/CursoFindOneInputDto"
              }
            ]
          },
          "ambientePadraoAula": {
            "nullable": true,
            "description": "Ambiente padrão da sala de aula.",
            "allOf": [
              {
                "$ref": "#/components/schemas/AmbienteFindOneInputDto"
              }
            ]
          }
        },
        "required": [
          "periodo",
          "curso"
        ]
      },
      "TurmaInputUpdateDto": {
        "type": "object",
        "properties": {
          "periodo": {
            "type": "string",
            "nullable": false,
            "description": "Período do Turma."
          },
          "curso": {
            "nullable": false,
            "description": "Curso da Turma.",
            "allOf": [
              {
                "$ref": "#/components/schemas/CursoFindOneInputDto"
              }
            ]
          },
          "ambientePadraoAula": {
            "nullable": true,
            "description": "Ambiente padrão da sala de aula.",
            "allOf": [
              {
                "$ref": "#/components/schemas/AmbienteFindOneInputDto"
              }
            ]
          }
        }
      },
      "CalendarioLetivoFindOneResultDto": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string",
            "nullable": false,
            "description": "Nome do calendário letivo."
          },
          "ano": {
            "type": "integer",
            "nullable": false,
            "description": "Ano do calendário letivo."
          },
          "campus": {
            "nullable": false,
            "description": "Campus.",
            "allOf": [
              {
                "$ref": "#/components/schemas/CampusFindOneResultDto"
              }
            ]
          },
          "modalidade": {
            "nullable": true,
            "description": "Modalidade.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ModalidadeFindOneResultDto"
              }
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": false,
            "description": "ID do Registro."
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time",
            "nullable": false,
            "description": "Data de Criação do Registro."
          },
          "dateUpdated": {
            "type": "string",
            "format": "date-time",
            "nullable": false,
            "description": "Data de Atualização do Registro."
          },
          "dateDeleted": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Data de Exclusão do Registro."
          }
        },
        "required": [
          "nome",
          "ano",
          "campus",
          "modalidade",
          "id",
          "dateCreated",
          "dateUpdated",
          "dateDeleted"
        ]
      },
      "CalendarioLetivoFindAllResultDto": {
        "type": "object",
        "properties": {
          "meta": {
            "nullable": false,
            "description": "Metadados da busca.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultMetaDto"
              }
            ]
          },
          "data": {
            "nullable": false,
            "description": "Resultados da busca atual.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CalendarioLetivoFindOneResultDto"
            }
          },
          "links": {
            "nullable": false,
            "description": "Links da busca.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultLinksDto"
              }
            ]
          }
        },
        "required": [
          "meta",
          "data",
          "links"
        ]
      },
      "CalendarioLetivoInputCreateDto": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string",
            "nullable": false,
            "description": "Nome do calendário letivo."
          },
          "ano": {
            "type": "integer",
            "nullable": false,
            "description": "Ano do calendário letivo."
          },
          "campus": {
            "nullable": false,
            "description": "Campus.",
            "allOf": [
              {
                "$ref": "#/components/schemas/CampusFindOneInputDto"
              }
            ]
          },
          "modalidade": {
            "nullable": true,
            "description": "Modalidade.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ModalidadeFindOneInputDto"
              }
            ]
          }
        },
        "required": [
          "nome",
          "ano",
          "campus",
          "modalidade"
        ]
      },
      "CalendarioLetivoInputUpdateDto": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string",
            "nullable": false,
            "description": "Nome do calendário letivo."
          },
          "ano": {
            "type": "integer",
            "nullable": false,
            "description": "Ano do calendário letivo."
          },
          "campus": {
            "nullable": false,
            "description": "Campus.",
            "allOf": [
              {
                "$ref": "#/components/schemas/CampusFindOneInputDto"
              }
            ]
          },
          "modalidade": {
            "nullable": true,
            "description": "Modalidade.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ModalidadeFindOneInputDto"
              }
            ]
          }
        }
      },
      "EventoFindOneResultDto": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string",
            "nullable": true,
            "description": "Nome do evento."
          },
          "dataInicio": {
            "type": "string",
            "format": "date",
            "nullable": false,
            "description": "Data de início."
          },
          "dataTermino": {
            "type": "string",
            "format": "date",
            "nullable": false,
            "description": "Data de término."
          },
          "cor": {
            "type": "string",
            "nullable": true,
            "description": "Cor da Evento."
          },
          "calendario": {
            "nullable": true,
            "description": "Calendario.",
            "allOf": [
              {
                "$ref": "#/components/schemas/CalendarioLetivoFindOneResultDto"
              }
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": false,
            "description": "ID do Registro."
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time",
            "nullable": false,
            "description": "Data de Criação do Registro."
          },
          "dateUpdated": {
            "type": "string",
            "format": "date-time",
            "nullable": false,
            "description": "Data de Atualização do Registro."
          },
          "dateDeleted": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Data de Exclusão do Registro."
          }
        },
        "required": [
          "nome",
          "dataInicio",
          "dataTermino",
          "cor",
          "calendario",
          "id",
          "dateCreated",
          "dateUpdated",
          "dateDeleted"
        ]
      },
      "EventoFindAllResultDto": {
        "type": "object",
        "properties": {
          "meta": {
            "nullable": false,
            "description": "Metadados da busca.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultMetaDto"
              }
            ]
          },
          "data": {
            "nullable": false,
            "description": "Resultados da busca atual.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventoFindOneResultDto"
            }
          },
          "links": {
            "nullable": false,
            "description": "Links da busca.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultLinksDto"
              }
            ]
          }
        },
        "required": [
          "meta",
          "data",
          "links"
        ]
      },
      "CalendarioLetivoFindOneInputDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": false,
            "description": "ID do Registro."
          }
        },
        "required": [
          "id"
        ]
      },
      "EventoInputCreateDto": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string",
            "nullable": true,
            "description": "Nome do evento."
          },
          "dataInicio": {
            "type": "string",
            "format": "date",
            "nullable": false,
            "description": "Data de início."
          },
          "dataTermino": {
            "type": "string",
            "format": "date",
            "nullable": false,
            "description": "Data de término."
          },
          "cor": {
            "type": "string",
            "nullable": true,
            "description": "Cor da Evento."
          },
          "calendario": {
            "nullable": true,
            "description": "Calendario.",
            "allOf": [
              {
                "$ref": "#/components/schemas/CalendarioLetivoFindOneInputDto"
              }
            ]
          }
        },
        "required": [
          "nome",
          "dataInicio",
          "dataTermino",
          "cor",
          "calendario"
        ]
      },
      "EventoInputUpdateDto": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string",
            "nullable": true,
            "description": "Nome do evento."
          },
          "dataInicio": {
            "type": "string",
            "format": "date",
            "nullable": false,
            "description": "Data de início."
          },
          "dataTermino": {
            "type": "string",
            "format": "date",
            "nullable": false,
            "description": "Data de término."
          },
          "cor": {
            "type": "string",
            "nullable": true,
            "description": "Cor da Evento."
          },
          "calendario": {
            "nullable": true,
            "description": "Calendario.",
            "allOf": [
              {
                "$ref": "#/components/schemas/CalendarioLetivoFindOneInputDto"
              }
            ]
          }
        }
      },
      "DiaCalendarioFindOneResultDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "string",
            "format": "date",
            "nullable": false,
            "description": "Data."
          },
          "diaLetivo": {
            "type": "boolean",
            "nullable": false,
            "description": "Define que o dia é letivo."
          },
          "feriado": {
            "type": "boolean",
            "nullable": false,
            "description": "Define que o dia é feriado."
          },
          "calendario": {
            "nullable": true,
            "description": "Calendario.",
            "allOf": [
              {
                "$ref": "#/components/schemas/CalendarioLetivoFindOneResultDto"
              }
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": false,
            "description": "ID do Registro."
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time",
            "nullable": false,
            "description": "Data de Criação do Registro."
          },
          "dateUpdated": {
            "type": "string",
            "format": "date-time",
            "nullable": false,
            "description": "Data de Atualização do Registro."
          },
          "dateDeleted": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Data de Exclusão do Registro."
          }
        },
        "required": [
          "data",
          "diaLetivo",
          "feriado",
          "calendario",
          "id",
          "dateCreated",
          "dateUpdated",
          "dateDeleted"
        ]
      },
      "DiaCalendarioFindAllResultDto": {
        "type": "object",
        "properties": {
          "meta": {
            "nullable": false,
            "description": "Metadados da busca.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultMetaDto"
              }
            ]
          },
          "data": {
            "nullable": false,
            "description": "Resultados da busca atual.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiaCalendarioFindOneResultDto"
            }
          },
          "links": {
            "nullable": false,
            "description": "Links da busca.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultLinksDto"
              }
            ]
          }
        },
        "required": [
          "meta",
          "data",
          "links"
        ]
      },
      "DiaCalendarioInputCreateDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "string",
            "format": "date",
            "nullable": false,
            "description": "Data."
          },
          "diaLetivo": {
            "type": "boolean",
            "nullable": false,
            "description": "Define que o dia é letivo."
          },
          "feriado": {
            "type": "boolean",
            "nullable": false,
            "description": "Define que o dia é feriado."
          },
          "calendario": {
            "nullable": true,
            "description": "Calendario.",
            "allOf": [
              {
                "$ref": "#/components/schemas/CalendarioLetivoFindOneInputDto"
              }
            ]
          }
        },
        "required": [
          "data",
          "diaLetivo",
          "feriado",
          "calendario"
        ]
      },
      "DiaCalendarioInputUpdateDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "string",
            "format": "date",
            "nullable": false,
            "description": "Data."
          },
          "diaLetivo": {
            "type": "boolean",
            "nullable": false,
            "description": "Define que o dia é letivo."
          },
          "feriado": {
            "type": "boolean",
            "nullable": false,
            "description": "Define que o dia é feriado."
          },
          "calendario": {
            "nullable": true,
            "description": "Calendario.",
            "allOf": [
              {
                "$ref": "#/components/schemas/CalendarioLetivoFindOneInputDto"
              }
            ]
          }
        }
      },
      "DiarioFindOneResultDto": {
        "type": "object",
        "properties": {
          "calendarioLetivo": {
            "nullable": false,
            "description": "Calendário Letivo vinculado ao diário.",
            "allOf": [
              {
                "$ref": "#/components/schemas/CalendarioLetivoFindOneResultDto"
              }
            ]
          },
          "turma": {
            "nullable": false,
            "description": "Turma vinculada ao diário.",
            "allOf": [
              {
                "$ref": "#/components/schemas/TurmaFindOneResultDto"
              }
            ]
          },
          "disciplina": {
            "nullable": false,
            "description": "Disciplina vinculada ao diário.",
            "allOf": [
              {
                "$ref": "#/components/schemas/DisciplinaFindOneResultDto"
              }
            ]
          },
          "ambientePadrao": {
            "nullable": true,
            "description": "Ambiente padrão.",
            "allOf": [
              {
                "$ref": "#/components/schemas/AmbienteFindOneResultDto"
              }
            ]
          },
          "imagemCapa": {
            "nullable": true,
            "description": "Imagem de capa",
            "allOf": [
              {
                "$ref": "#/components/schemas/ImagemFindOneResultDto"
              }
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": false,
            "description": "ID do Registro."
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time",
            "nullable": false,
            "description": "Data de Criação do Registro."
          },
          "dateUpdated": {
            "type": "string",
            "format": "date-time",
            "nullable": false,
            "description": "Data de Atualização do Registro."
          },
          "dateDeleted": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Data de Exclusão do Registro."
          }
        },
        "required": [
          "calendarioLetivo",
          "turma",
          "disciplina",
          "ambientePadrao",
          "imagemCapa",
          "id",
          "dateCreated",
          "dateUpdated",
          "dateDeleted"
        ]
      },
      "DiarioFindAllResultDto": {
        "type": "object",
        "properties": {
          "meta": {
            "nullable": false,
            "description": "Metadados da busca.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultMetaDto"
              }
            ]
          },
          "data": {
            "nullable": false,
            "description": "Resultados da busca atual.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiarioFindOneResultDto"
            }
          },
          "links": {
            "nullable": false,
            "description": "Links da busca.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultLinksDto"
              }
            ]
          }
        },
        "required": [
          "meta",
          "data",
          "links"
        ]
      },
      "TurmaFindOneInputDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": false,
            "description": "ID do Registro."
          }
        },
        "required": [
          "id"
        ]
      },
      "DisciplinaFindOneInputDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": false,
            "description": "ID do Registro."
          }
        },
        "required": [
          "id"
        ]
      },
      "DiarioInputCreateDto": {
        "type": "object",
        "properties": {
          "ativo": {
            "type": "boolean",
            "nullable": false,
            "description": "Situação do diário."
          },
          "calendarioLetivo": {
            "nullable": false,
            "description": "Calendário Letivo vinculado ao diário.",
            "allOf": [
              {
                "$ref": "#/components/schemas/CalendarioLetivoFindOneInputDto"
              }
            ]
          },
          "turma": {
            "nullable": false,
            "description": "Turma vinculada ao diário.",
            "allOf": [
              {
                "$ref": "#/components/schemas/TurmaFindOneInputDto"
              }
            ]
          },
          "disciplina": {
            "nullable": false,
            "description": "Disciplina vinculada ao diário.",
            "allOf": [
              {
                "$ref": "#/components/schemas/DisciplinaFindOneInputDto"
              }
            ]
          },
          "ambientePadrao": {
            "nullable": true,
            "description": "Ambiente padrão.",
            "allOf": [
              {
                "$ref": "#/components/schemas/AmbienteFindOneInputDto"
              }
            ]
          }
        },
        "required": [
          "calendarioLetivo",
          "turma",
          "disciplina",
          "ambientePadrao"
        ]
      },
      "DiarioInputUpdateDto": {
        "type": "object",
        "properties": {
          "ativo": {
            "type": "boolean",
            "nullable": false,
            "description": "Situação do diário."
          },
          "calendarioLetivo": {
            "nullable": false,
            "description": "Calendário Letivo vinculado ao diário.",
            "allOf": [
              {
                "$ref": "#/components/schemas/CalendarioLetivoFindOneInputDto"
              }
            ]
          },
          "turma": {
            "nullable": false,
            "description": "Turma vinculada ao diário.",
            "allOf": [
              {
                "$ref": "#/components/schemas/TurmaFindOneInputDto"
              }
            ]
          },
          "disciplina": {
            "nullable": false,
            "description": "Disciplina vinculada ao diário.",
            "allOf": [
              {
                "$ref": "#/components/schemas/DisciplinaFindOneInputDto"
              }
            ]
          },
          "ambientePadrao": {
            "nullable": true,
            "description": "Ambiente padrão.",
            "allOf": [
              {
                "$ref": "#/components/schemas/AmbienteFindOneInputDto"
              }
            ]
          }
        }
      },
      "DiarioProfessorFindOneResultDto": {
        "type": "object",
        "properties": {
          "situacao": {
            "type": "boolean",
            "nullable": false,
            "description": "Situação do vínculo."
          },
          "vinculo": {
            "nullable": false,
            "description": "Vínculo do usuário ao campus.",
            "allOf": [
              {
                "$ref": "#/components/schemas/VinculoFindOneResultDto"
              }
            ]
          },
          "diario": {
            "nullable": false,
            "description": "Diário vinculado.",
            "allOf": [
              {
                "$ref": "#/components/schemas/DiarioFindOneResultDto"
              }
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": false,
            "description": "ID do Registro."
          }
        },
        "required": [
          "situacao",
          "vinculo",
          "diario",
          "id"
        ]
      },
      "DiarioProfessorFindAllResultDto": {
        "type": "object",
        "properties": {
          "meta": {
            "nullable": false,
            "description": "Metadados da busca.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultMetaDto"
              }
            ]
          },
          "data": {
            "nullable": false,
            "description": "Resultados da busca atual.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiarioProfessorFindOneResultDto"
            }
          },
          "links": {
            "nullable": false,
            "description": "Links da busca.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultLinksDto"
              }
            ]
          }
        },
        "required": [
          "meta",
          "data",
          "links"
        ]
      },
      "VinculoFindOneInputDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": false,
            "description": "ID do Registro."
          }
        },
        "required": [
          "id"
        ]
      },
      "DiarioFindOneInputDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": false,
            "description": "ID do Registro."
          }
        },
        "required": [
          "id"
        ]
      },
      "DiarioProfessorInputCreateDto": {
        "type": "object",
        "properties": {
          "situacao": {
            "type": "boolean",
            "nullable": false,
            "description": "Situação do vínculo."
          },
          "vinculo": {
            "nullable": false,
            "description": "Vínculo do usuário ao campus.",
            "allOf": [
              {
                "$ref": "#/components/schemas/VinculoFindOneInputDto"
              }
            ]
          },
          "diario": {
            "nullable": false,
            "description": "Diário vinculado.",
            "allOf": [
              {
                "$ref": "#/components/schemas/DiarioFindOneInputDto"
              }
            ]
          }
        },
        "required": [
          "situacao",
          "vinculo",
          "diario"
        ]
      },
      "DiarioProfessorInputUpdateDto": {
        "type": "object",
        "properties": {
          "situacao": {
            "type": "boolean",
            "nullable": false,
            "description": "Situação do vínculo."
          },
          "vinculo": {
            "nullable": false,
            "description": "Vínculo do usuário ao campus.",
            "allOf": [
              {
                "$ref": "#/components/schemas/VinculoFindOneInputDto"
              }
            ]
          },
          "diario": {
            "nullable": false,
            "description": "Diário vinculado.",
            "allOf": [
              {
                "$ref": "#/components/schemas/DiarioFindOneInputDto"
              }
            ]
          }
        }
      },
      "EtapaFindOneResultDto": {
        "type": "object",
        "properties": {
          "numero": {
            "type": "integer",
            "nullable": true,
            "description": "Número da etapa."
          },
          "dataInicio": {
            "type": "string",
            "format": "date",
            "nullable": false,
            "description": "Data de início."
          },
          "dataTermino": {
            "type": "string",
            "format": "date",
            "nullable": false,
            "description": "Data de término."
          },
          "cor": {
            "type": "string",
            "nullable": true,
            "description": "Cor da etapa."
          },
          "calendario": {
            "nullable": true,
            "description": "Calendario.",
            "allOf": [
              {
                "$ref": "#/components/schemas/CalendarioLetivoFindOneResultDto"
              }
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": false,
            "description": "ID do Registro."
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time",
            "nullable": false,
            "description": "Data de Criação do Registro."
          },
          "dateUpdated": {
            "type": "string",
            "format": "date-time",
            "nullable": false,
            "description": "Data de Atualização do Registro."
          },
          "dateDeleted": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Data de Exclusão do Registro."
          }
        },
        "required": [
          "numero",
          "dataInicio",
          "dataTermino",
          "cor",
          "calendario",
          "id",
          "dateCreated",
          "dateUpdated",
          "dateDeleted"
        ]
      },
      "EtapaFindAllResultDto": {
        "type": "object",
        "properties": {
          "meta": {
            "nullable": false,
            "description": "Metadados da busca.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultMetaDto"
              }
            ]
          },
          "data": {
            "nullable": false,
            "description": "Resultados da busca atual.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EtapaFindOneResultDto"
            }
          },
          "links": {
            "nullable": false,
            "description": "Links da busca.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultLinksDto"
              }
            ]
          }
        },
        "required": [
          "meta",
          "data",
          "links"
        ]
      },
      "EtapaInputCreateDto": {
        "type": "object",
        "properties": {
          "numero": {
            "type": "integer",
            "nullable": true,
            "description": "Número da etapa."
          },
          "dataInicio": {
            "type": "string",
            "format": "date",
            "nullable": false,
            "description": "Data de início."
          },
          "dataTermino": {
            "type": "string",
            "format": "date",
            "nullable": false,
            "description": "Data de término."
          },
          "cor": {
            "type": "string",
            "nullable": true,
            "description": "Cor da etapa."
          },
          "calendario": {
            "nullable": true,
            "description": "Calendario.",
            "allOf": [
              {
                "$ref": "#/components/schemas/CalendarioLetivoFindOneInputDto"
              }
            ]
          }
        },
        "required": [
          "numero",
          "dataInicio",
          "dataTermino",
          "cor",
          "calendario"
        ]
      },
      "EtapaInputUpdateDto": {
        "type": "object",
        "properties": {
          "numero": {
            "type": "integer",
            "nullable": true,
            "description": "Número da etapa."
          },
          "dataInicio": {
            "type": "string",
            "format": "date",
            "nullable": false,
            "description": "Data de início."
          },
          "dataTermino": {
            "type": "string",
            "format": "date",
            "nullable": false,
            "description": "Data de término."
          },
          "cor": {
            "type": "string",
            "nullable": true,
            "description": "Cor da etapa."
          },
          "calendario": {
            "nullable": true,
            "description": "Calendario.",
            "allOf": [
              {
                "$ref": "#/components/schemas/CalendarioLetivoFindOneInputDto"
              }
            ]
          }
        }
      },
      "IntervaloDeTempoFindOneResultDto": {
        "type": "object",
        "properties": {
          "periodoInicio": {
            "type": "string",
            "format": "time",
            "nullable": false,
            "description": "Horário que o intervalo de tempo inicia."
          },
          "periodoFim": {
            "type": "string",
            "format": "time",
            "nullable": false,
            "description": "Horário que o intervalo de tempo termina."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": false,
            "description": "ID do Registro."
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time",
            "nullable": false,
            "description": "Data de Criação do Registro."
          },
          "dateUpdated": {
            "type": "string",
            "format": "date-time",
            "nullable": false,
            "description": "Data de Atualização do Registro."
          },
          "dateDeleted": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Data de Exclusão do Registro."
          }
        },
        "required": [
          "periodoInicio",
          "periodoFim",
          "id",
          "dateCreated",
          "dateUpdated",
          "dateDeleted"
        ]
      },
      "AulaFindOneResultDto": {
        "type": "object",
        "properties": {
          "formato": {
            "type": "string",
            "nullable": true,
            "description": "Formato da aula."
          },
          "data": {
            "type": "string",
            "format": "date",
            "nullable": false,
            "description": "Data da aula."
          },
          "intervaloDeTempo": {
            "nullable": false,
            "description": "Intervalo de Tempo associado à aula.",
            "allOf": [
              {
                "$ref": "#/components/schemas/IntervaloDeTempoFindOneResultDto"
              }
            ]
          },
          "diario": {
            "nullable": false,
            "description": "Diário associado à aula.",
            "allOf": [
              {
                "$ref": "#/components/schemas/DiarioFindOneResultDto"
              }
            ]
          },
          "ambiente": {
            "nullable": true,
            "description": "Ambiente associado à aula.",
            "allOf": [
              {
                "$ref": "#/components/schemas/AmbienteFindOneResultDto"
              }
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": false,
            "description": "ID do Registro."
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time",
            "nullable": false,
            "description": "Data de Criação do Registro."
          },
          "dateUpdated": {
            "type": "string",
            "format": "date-time",
            "nullable": false,
            "description": "Data de Atualização do Registro."
          },
          "dateDeleted": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Data de Exclusão do Registro."
          }
        },
        "required": [
          "formato",
          "data",
          "intervaloDeTempo",
          "diario",
          "ambiente",
          "id",
          "dateCreated",
          "dateUpdated",
          "dateDeleted"
        ]
      },
      "AulaFindAllResultDto": {
        "type": "object",
        "properties": {
          "meta": {
            "nullable": false,
            "description": "Metadados da busca.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultMetaDto"
              }
            ]
          },
          "data": {
            "nullable": false,
            "description": "Resultados da busca atual.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AulaFindOneResultDto"
            }
          },
          "links": {
            "nullable": false,
            "description": "Links da busca.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultLinksDto"
              }
            ]
          }
        },
        "required": [
          "meta",
          "data",
          "links"
        ]
      },
      "IntervaloDeTempoInputDto": {
        "type": "object",
        "properties": {
          "periodoInicio": {
            "type": "string",
            "format": "time",
            "nullable": false,
            "description": "Horário que o intervalo de tempo inicia."
          },
          "periodoFim": {
            "type": "string",
            "format": "time",
            "nullable": false,
            "description": "Horário que o intervalo de tempo termina."
          }
        },
        "required": [
          "periodoInicio",
          "periodoFim"
        ]
      },
      "AulaInputCreateDto": {
        "type": "object",
        "properties": {
          "formato": {
            "type": "string",
            "nullable": true,
            "description": "Formato da aula."
          },
          "data": {
            "type": "string",
            "format": "date",
            "nullable": false,
            "description": "Data da aula."
          },
          "intervaloDeTempo": {
            "nullable": false,
            "description": "Intervalo de Tempo associado à aula.",
            "allOf": [
              {
                "$ref": "#/components/schemas/IntervaloDeTempoInputDto"
              }
            ]
          },
          "diario": {
            "nullable": false,
            "description": "Diário associado à aula.",
            "allOf": [
              {
                "$ref": "#/components/schemas/DiarioFindOneInputDto"
              }
            ]
          },
          "ambiente": {
            "nullable": true,
            "description": "Ambiente associado à aula.",
            "allOf": [
              {
                "$ref": "#/components/schemas/AmbienteFindOneInputDto"
              }
            ]
          }
        },
        "required": [
          "formato",
          "data",
          "intervaloDeTempo",
          "diario",
          "ambiente"
        ]
      },
      "AulaInputUpdateDto": {
        "type": "object",
        "properties": {
          "formato": {
            "type": "string",
            "nullable": true,
            "description": "Formato da aula."
          },
          "data": {
            "type": "string",
            "format": "date",
            "nullable": false,
            "description": "Data da aula."
          },
          "intervaloDeTempo": {
            "nullable": false,
            "description": "Intervalo de Tempo associado à aula.",
            "allOf": [
              {
                "$ref": "#/components/schemas/IntervaloDeTempoInputDto"
              }
            ]
          },
          "diario": {
            "nullable": false,
            "description": "Diário associado à aula.",
            "allOf": [
              {
                "$ref": "#/components/schemas/DiarioFindOneInputDto"
              }
            ]
          },
          "ambiente": {
            "nullable": true,
            "description": "Ambiente associado à aula.",
            "allOf": [
              {
                "$ref": "#/components/schemas/AmbienteFindOneInputDto"
              }
            ]
          }
        }
      },
      "TurmaDisponibilidadeFindOneResultDto": {
        "type": "object",
        "properties": {
          "dataInicio": {
            "type": "string",
            "format": "date",
            "nullable": false,
            "description": "Data de início."
          },
          "dataFim": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "description": "Data de término."
          },
          "turma": {
            "nullable": true,
            "description": "Turma.",
            "allOf": [
              {
                "$ref": "#/components/schemas/TurmaFindOneResultDto"
              }
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": false,
            "description": "ID do Registro."
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time",
            "nullable": false,
            "description": "Data de Criação do Registro."
          },
          "dateUpdated": {
            "type": "string",
            "format": "date-time",
            "nullable": false,
            "description": "Data de Atualização do Registro."
          },
          "dateDeleted": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Data de Exclusão do Registro."
          }
        },
        "required": [
          "dataInicio",
          "dataFim",
          "turma",
          "id",
          "dateCreated",
          "dateUpdated",
          "dateDeleted"
        ]
      },
      "TurmaDisponibilidadeFindAllResultDto": {
        "type": "object",
        "properties": {
          "meta": {
            "nullable": false,
            "description": "Metadados da busca.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultMetaDto"
              }
            ]
          },
          "data": {
            "nullable": false,
            "description": "Resultados da busca atual.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TurmaDisponibilidadeFindOneResultDto"
            }
          },
          "links": {
            "nullable": false,
            "description": "Links da busca.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultLinksDto"
              }
            ]
          }
        },
        "required": [
          "meta",
          "data",
          "links"
        ]
      },
      "TurmaDisponibilidadeInputCreateDto": {
        "type": "object",
        "properties": {
          "dataInicio": {
            "type": "string",
            "format": "date",
            "nullable": false,
            "description": "Data de início."
          },
          "dataFim": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "description": "Data de término."
          },
          "turma": {
            "nullable": true,
            "description": "Turma.",
            "allOf": [
              {
                "$ref": "#/components/schemas/TurmaFindOneInputDto"
              }
            ]
          }
        },
        "required": [
          "dataInicio",
          "dataFim",
          "turma"
        ]
      },
      "TurmaDisponibilidadeInputUpdateDto": {
        "type": "object",
        "properties": {
          "dataInicio": {
            "type": "string",
            "format": "date",
            "nullable": false,
            "description": "Data de início."
          },
          "dataFim": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "description": "Data de término."
          },
          "turma": {
            "nullable": true,
            "description": "Turma.",
            "allOf": [
              {
                "$ref": "#/components/schemas/TurmaFindOneInputDto"
              }
            ]
          }
        }
      },
      "TurmaDisponibilidadeDiaFindOneResultDto": {
        "type": "object",
        "properties": {
          "diaSemanaIso": {
            "type": "integer",
            "nullable": false,
            "description": "Dia da semana."
          },
          "intervaloDeTempo": {
            "nullable": true,
            "description": "Intervalo de tempo.",
            "allOf": [
              {
                "$ref": "#/components/schemas/IntervaloDeTempoFindOneResultDto"
              }
            ]
          },
          "turmaDisponibilidade": {
            "nullable": true,
            "description": "Disponibilidade da turma.",
            "allOf": [
              {
                "$ref": "#/components/schemas/TurmaDisponibilidadeFindOneResultDto"
              }
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": false,
            "description": "ID do Registro."
          }
        },
        "required": [
          "diaSemanaIso",
          "intervaloDeTempo",
          "turmaDisponibilidade",
          "id"
        ]
      },
      "TurmaDisponibilidadeDiaFindAllResultDto": {
        "type": "object",
        "properties": {
          "meta": {
            "nullable": false,
            "description": "Metadados da busca.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultMetaDto"
              }
            ]
          },
          "data": {
            "nullable": false,
            "description": "Resultados da busca atual.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TurmaDisponibilidadeDiaFindOneResultDto"
            }
          },
          "links": {
            "nullable": false,
            "description": "Links da busca.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultLinksDto"
              }
            ]
          }
        },
        "required": [
          "meta",
          "data",
          "links"
        ]
      },
      "TurmaDisponibilidadeFindOneInputDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": false,
            "description": "ID do Registro."
          }
        },
        "required": [
          "id"
        ]
      },
      "TurmaDisponibilidadeDiaInputCreateDto": {
        "type": "object",
        "properties": {
          "diaSemanaIso": {
            "type": "integer",
            "nullable": false,
            "description": "Dia da semana."
          },
          "intervaloDeTempo": {
            "nullable": true,
            "description": "Intervalo de tempo.",
            "allOf": [
              {
                "$ref": "#/components/schemas/IntervaloDeTempoInputDto"
              }
            ]
          },
          "turmaDisponibilidade": {
            "nullable": true,
            "description": "Disponibilidade da turma.",
            "allOf": [
              {
                "$ref": "#/components/schemas/TurmaDisponibilidadeFindOneInputDto"
              }
            ]
          }
        },
        "required": [
          "diaSemanaIso",
          "intervaloDeTempo",
          "turmaDisponibilidade"
        ]
      },
      "TurmaDisponibilidadeDiaInputUpdateDto": {
        "type": "object",
        "properties": {
          "diaSemanaIso": {
            "type": "integer",
            "nullable": false,
            "description": "Dia da semana."
          },
          "intervaloDeTempo": {
            "nullable": true,
            "description": "Intervalo de tempo.",
            "allOf": [
              {
                "$ref": "#/components/schemas/IntervaloDeTempoInputDto"
              }
            ]
          },
          "turmaDisponibilidade": {
            "nullable": true,
            "description": "Disponibilidade da turma.",
            "allOf": [
              {
                "$ref": "#/components/schemas/TurmaDisponibilidadeFindOneInputDto"
              }
            ]
          }
        }
      }
    }
  }
}