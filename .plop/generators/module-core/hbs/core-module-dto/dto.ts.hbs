import { ObjectType } from '@nestjs/graphql';
import * as yup from 'yup';
import * as Dto from '../../../(spec)';
import {
  {{#if (eq modelIdType "uuid") }}
  CommonPropertyUuid,
  {{/if}}
  {{#if (eq modelIdType "numeric") }}
  CommonPropertyId,
  {{/if}}
  DtoProperty,
  ObjectUuidDto,
  ValidationContractObjectUuid,
  ValidationContractString,
  {{#if (eq modelIdType "uuid") }}
  ValidationContractUuid,
  {{/if}}
  {{#if (eq modelIdType "numeric") }}
  ValidationContractId,
  {{/if}}
  createDtoPropertyMap,
  createValidationContract,
} from '../../../../../infrastructure';

// ======================================================

export const {{ c_pascal moduleName }}DtoValidationContract = createValidationContract(() => {
  return yup.object({
    {{#if (eq modelIdType "uuid") }}
    id: ValidationContractUuid(),
    {{/if}}
    {{#if (eq modelIdType "numeric") }}
    id: ValidationContractId(),
    {{/if}}

    //

    {{#each propriedadesDeclaradas}}
    {{ c_camel this.nome }}: yup.mixed(), // {{ c_camel ../moduleName }}

    {{/each}}
    //
  });
});


// ======================================================

export const {{ c_pascal moduleName }}DtoProperties = createDtoPropertyMap({
  {{#if (eq modelIdType "uuid") }}
  {{ c_constant moduleName }}_ID: CommonPropertyUuid('ID de "{{ c_no moduleName }}"'),
  {{/if}}
  {{#if (eq modelIdType "numeric") }}
    {{ c_constant moduleName }}_ID: CommonPropertyId('ID de "{{ c_no moduleName }}"'),
  {{/if}}

  //

  {{#each propriedadesDeclaradas}}
  {{ c_constant ../moduleName }}_{{ c_constant this.nome }}: {
    nullable: {{ ternary this.nullable "true" "false" }},
    description: '{{ this.descricao }}',
    //
    gql: {
      type: () => {{ this.tipoGraphQl }},
    },
    swagger: {
      type: {{{ this.tipoSwagger }}},
    },
  },
  {{/each}}
  //

});

// ======================================================

@ObjectType('{{ c_pascal moduleName }}')
export class {{ c_pascal moduleName }}Dto implements Dto.I{{ c_pascal moduleName }}Model {
  @DtoProperty({{ c_pascal moduleName }}DtoProperties.{{ c_constant moduleName }}_ID)
  {{#if (eq modelIdType "uuid") }}
  id!: string;
  {{/if}}
  {{#if (eq modelIdType "numeric") }}
  id!: number;
  {{/if}}


  //

  {{#each propriedadesDeclaradas}}
  @DtoProperty({{ c_pascal ../moduleName }}DtoProperties.{{ c_constant ../moduleName }}_{{ c_constant this.nome }})
  {{this.nome}}!: {{this.tipoEntidadeInterface }} {{ ternary this.nullable "| null" "" }};

  {{/each}}
  //

  {{#if modelDated}}
  dateCreated!: Dto.IEntityDate;
  dateUpdated!: Dto.IEntityDate;
  dateDeleted!: Dto.IEntityDate | null;

  {{/if}}
}
